= javascript_include_tag "bug_reports"
- summary_1_pos = 'summary-one'
- summary_2_pos = 'summary-two'
- if rand > 0.5
  - summary_1_pos = 'summary-two'
  - summary_2_pos = 'summary-one'

/%p#notice= notice

.navbar
  .navbar-inner
    .container
      %a.btn.btn-navbar{"data-target" => ".nav-collapse", "data-toggle" => "collapse"}
        %span.icon-bar
        %span.icon-bar
        %span.icon-bar
      %a.brand{:href => "#"} Bug Report Summary Evaluation
      .nav-collapse
        %ul.nav.secondary-nav
          %li.active
            %a{:href => "#"} Home
          %li
            %a{:href => "#about"} Help
          %li
            %a{:href => "#contact"} Contact
      / /.nav-collapse

.hero-unit.bg-dark
  .container
    .row
      .span13
        %h3
          Title: #{@bug_report.title}
        %h4{:style => "margin-top:7px;"}
          Project: "#{@bug_report.project}"
      .span3
        %a.btn.btn-info.btn-large.pull-right{:href => "#{@bug_report.original_link}", :target => "_blank"}
          Original link

.container-fluid
  .row-fluid
    .span12
      .container-fluid.container-box
        .row-fluid
          .span12
            .summaries
              %h2 Bug Report Summaries
              .row-fluid
                .span6
                  %h3 Summary 1
                .span6
                  %h3 Summary 2
              .row-fluid
                .span6{ :class => "#{summary_1_pos}" }
                  %fieldset.summary
                    / %legend Lex Summary
                    - @bug_report.comments.each do |com|
                      - if com.sentences.where( :is_in_lex_summary => true ).count > 0
                        .comment-header
                          = com.number
                          \|
                          = com.submitted_at
                          \|
                          = com.participant.email
                        .comment-body
                          - com.sentences.order('number ASC').each do |sen|
                            - if sen.text.strip.empty?
                              %p
                            - elsif sen.is_in_lex_summary?
                              %span.sentence{ :sen_id => "#{sen.id}", :bug_id => "#{@bug_report.id}", :com_id => "#{com.id}" }
                                = raw sen.text
                .span6{ :class => "#{summary_2_pos}" }
                  %fieldset.summary
                    / %legend Email Summary
                    - @bug_report.comments.each do |com|
                      - if com.sentences.where( :is_in_email_summary => true ).count > 0
                        .comment-header
                          = com.number
                          \|
                          = com.submitted_at
                          \|
                          = com.participant.email
                        .comment-body
                          - com.sentences.order('number ASC').each do |sen|
                            - if sen.text.strip.empty?
                              %p
                            - elsif sen.is_in_email_summary?
                              %span.sentence{ :sen_id => "#{sen.id}", :bug_id => "#{@bug_report.id}", :com_id => "#{com.id}" }
                                = raw sen.text
                .clear-both

        .row-fluid
          .span12
            .summaries
              %h2 Interlaced Summaries
              .row-fluid
                .span6
                  %h3 Summary 1
                .span6
                  %h3 Summary 2
              .row-fluid.fix-height
                .span6{ :class => "#{summary_1_pos}" }
                  %fieldset.summary
                    / %legend Lex Summary
                    - @bug_report.comments.order('number ASC').each do |com|
                      .comment
                        .comment-header
                          = com.number
                          \|
                          = com.submitted_at
                          \|
                          = com.participant.email
                        .comment-body
                          - com.sentences.order('number ASC').each do |sen|
                            - if sen.text.strip.empty?
                              %p
                            - elsif sen.is_in_lex_summary?
                              %span.sentence.eval-sen.highlight{ :sen_id => "#{sen.id}", :bug_id => "#{@bug_report.id}", :com_id => "#{com.id}" }
                                = raw sen.text
                            - else
                              %span.sentence.eval-sen{ :sen_id => "#{sen.id}", :bug_id => "#{@bug_report.id}", :com_id => "#{com.id}" }
                                = raw sen.text

                .span6{ :class => "#{summary_2_pos}" }
                  %fieldset.summary
                    / %legend Email Summary
                    - @bug_report.comments.order('number ASC').each do |com|
                      .comment
                        .comment-header
                          = com.number
                          \|
                          = com.submitted_at
                          \|
                          = com.participant.email
                        .comment-body
                          - com.sentences.order('number ASC').each do |sen|
                            - if sen.text.strip.empty?
                              %p
                            - elsif sen.is_in_email_summary?
                              %span.sentence.eval-sen.highlight{ :sen_id => "#{sen.id}", :bug_id => "#{@bug_report.id}", :com_id => "#{com.id}" }
                                = raw sen.text
                            - else
                              %span.sentence.eval-sen{ :sen_id => "#{sen.id}", :bug_id => "#{@bug_report.id}", :com_id => "#{com.id}" }
                                = raw sen.text
                .clear-both

            .survey-form
              .question-container
                .question
                  Q1: Please give a score, from 1-5, for how much each of the following statements is true for each summary:
                  .subquestion
                    Important points of the bug report are represented in the summary.
                  .answer 
                    .row-fluid
                      .span8
                        .span4.summary-one
                          %h4 Summary 1
                        .span4.summary-two
                          %h4 Summary 2
                    .row-fluid
                      .span8
                        .span4{ :class => "#{summary_1_pos}" }
                          .choices
                            .radio-buttons
                              - 0.upto(5) do |i|
                                = radio_button_tag "q1_s1", i
                                = label_tag "q1_s1_#{i}", i
                        .span4{ :class => "#{summary_2_pos}" }
                          .choices
                            .radio-buttons
                              - 0.upto(5) do |i|
                                = radio_button_tag "q1_s2", i
                                = label_tag "q1_s2_#{i}", i

                  .subquestion
                    Q2: The summary avoids redundancy.
                  .answer
                    .row-fluid
                      .span8
                        .span4.summary-one
                          %h4 Summary 1
                        .span4.summary-two
                          %h4 Summary 2                  
                    .row-fluid
                      .span8
                        .span4{ :class => "#{summary_1_pos}" }
                          .choices
                            .radio-buttons
                              - 0.upto(5) do |i|
                                = radio_button_tag "q2_s1", i
                                = label_tag "q2_s1_#{i}", i
                        .span4{ :class => "#{summary_2_pos}" }
                          .choices
                            .radio-buttons
                              - 0.upto(5) do |i|
                                = radio_button_tag "q2_s2", i
                                = label_tag "q2_s2_#{i}", i

                  .subquestion
                    Q3: The summary does not contain unnecessary information.
                  .answer
                    .row-fluid
                      .span8
                        .span4.summary-one
                          %h4 Summary 1
                        .span4.summary-two
                          %h4 Summary 2                  
                    .row-fluid
                      .span8
                        .span4{ :class => "#{summary_1_pos}" }
                          .choices
                            .radio-buttons
                              - 0.upto(5) do |i|
                                = radio_button_tag "q3_s1", i
                                = label_tag "q3_s1_#{i}", i
                        .span4{ :class => "#{summary_2_pos}" }
                          .choices
                            .radio-buttons
                              - 0.upto(5) do |i|
                                = radio_button_tag "q3_s2", i
                                = label_tag "q3_s2_#{i}", i

                  .subquestion
                    Q4: The summary is coherent.
                  .answer
                    .row-fluid
                      .span8
                        .span4.summary-one
                          %h4 Summary 1
                        .span4.summary-two
                          %h4 Summary 2                  
                    .row-fluid
                      .span8
                        .span4{ :class => "#{summary_1_pos}" }
                          .choices
                            .radio-buttons
                              - 0.upto(5) do |i|
                                = radio_button_tag "q4_s1", i
                                = label_tag "q4_s1_#{i}", i
                        .span4{ :class => "#{summary_2_pos}" }
                          .choices
                            .radio-buttons
                              - 0.upto(5) do |i|
                                = radio_button_tag "q4_s2", i
                                = label_tag "q4_s2_#{i}", i

              .question-container
                .question
                  Q5: Do you prefer reading such summaries in condensed form or highlighted form? 
                .answer
                  .choices{ :style => 'display: block; padding: 0.5em 0 0 1.5em;' }
                    .radio-buttons
                      - ['condensed','highlighted'].each do |view|
                        = radio_button_tag "q5", view
                        = label_tag "q5_#{view}", view.humanize
                    What do you consider are the advantages of one over the other?
                    %br
                    = text_area_tag "q5_reason", nil, :size => "250x6"

              .question-container
                .question
                  Q6: What do you consider is the most important information a bug report summary should contain?
                .answer
                  .choices{ :style => 'display: block; padding: 0.5em 0 0 1.5em;' }
                    Why?
                    %br
                    = text_area_tag "q6_reason", nil, :size => "25x6"

              .question-container
                .question
                  Q7: In what situations do you consider that bug report summaries could be helpful?
                .answer
                  .choices{ :style => 'display: block; padding: 0.5em 0 0 1.5em;' }
                    Why?
                    %br
                    = text_area_tag "q6_reason", nil, :size => "25x6"

              .question-container
                .question
                  Q8: Would you like to contacted about the results of this experiment?
                .answer
                  .row-fluid
                    .span8
                      .span4                  
                        .choices
                          .radio-buttons
                            - ['yes','no'].each do |choice|
                              = radio_button_tag "q7", choice
                              = label_tag "q7_#{choice}", choice.humanize

  %hr

  %footer
    %p BTS Evaluation Experiment 2012
