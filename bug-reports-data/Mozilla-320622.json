{
    "project": "Mozilla", 
    "original_link": "http://dont.know.yet/320622", 
    "comments": [
        {
            "date": "2005-12-17 00:44:25", 
            "sentences": [], 
            "name": "Jonathan Watt", 
            "email": "Jonathan Watt"
        }, 
        {
            "date": "2006-01-04 09:22:07", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "An examination of the code suggests that they do default to 3.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Do you have a\ntestcase which proves otherwise?", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2006-01-04 15:50:00", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "The important part here is \"if their attributes are removed\".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "(Using\nremoveAttributeNS.)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I don't have a testcase (I can make one), but I know the\ncode well enough to know it is the case.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This bug was more a note to myself\nsince I don't think many people will stumble over the problem.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonathan Watt", 
            "email": "Jonathan Watt"
        }, 
        {
            "date": "2006-01-05 06:22:03", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=207606) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "testcase", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2006-01-05 07:20:51", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "OK, I understand now.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "There seem to be lots of SVG attributes that should be reset when they are\nremoved but as far as I can tell removeAttributeNS does not reset any values to\nthe default in the mozilla SVG (or HTML if the concept is even relevant for\nHTML).", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This does seem to be implemented by the Adobe SVG plug in.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "For example <rect> x and y attributes should be reset to 0.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "markerWidth and\nmarkerHeight are only special in that they do not get reset to 0 as most\nattributes do.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2006-01-05 07:23:14", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=207616) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "patch for marker only (for comment)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Is this how UnsetAttr should be implemented for marker elements?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Presumably this needs implementing for all other SVG elements.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2006-01-09 13:13:38", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Yes, I think this is what we'll need.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }, 
        {
            "date": "2006-01-09 13:29:39", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 207616 [details])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">-      align = nsIDOMSVGPreserveAspectRatio::SVG_MEETORSLICE_MEET;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      meetOrSlice = nsIDOMSVGPreserveAspectRatio::SVG_MEETORSLICE_MEET;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Crap!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We should never hit that code path so I guess it doesn't matter too much,\nbut it's annoying to think this has propogated from my original code and gone\nunnoticed for so long.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Can you fix that in nsSVGSVGElement.cpp,\nnsSVGImageFrame.cpp and nsSVGPatternFrame.cpp to keep them in sync please?", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonathan Watt", 
            "email": "Jonathan Watt"
        }, 
        {
            "date": "2006-01-09 14:23:06", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "wow, that is a massive amount of bloaty code.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "There must be a better way...", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert O'Callahan (:roc) (Mozilla Corporation)", 
            "email": "Robert O'Callahan (:roc) (Mozilla Corporation)"
        }, 
        {
            "date": "2006-01-09 14:23:32", 
            "sentences": [], 
            "name": "Robert O'Callahan (:roc) (Mozilla Corporation)", 
            "email": "Robert O'Callahan (:roc) (Mozilla Corporation)"
        }, 
        {
            "date": "2006-01-09 14:58:34", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 207616 [details])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    if (aAttr == nsSVGAtoms::markerWidth) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      nsIDOMSVGLength *length;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      mMarkerWidth->GetBaseVal(&length);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      length->SetValue(3.0f);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Need to call SetCoordCtxRect here.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    }", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    if (aAttr == nsSVGAtoms::markerHeight) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      nsIDOMSVGLength *length;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      mMarkerHeight->GetBaseVal(&length);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      length->SetValue(3.0f);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "And here.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    }", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "And for that matter we should be checking for changes to markerWidth/Height in\nDidModifySVGObservable and calling SetCoordCtxRect there too.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "(And while on the\nsubject of DidModifySVGObservable it should only be doing the sync mOrientAngle\nstuff when 'observable' is mOrientType.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Note we aren't currently observing\nmMarkerWidth/Height, so you'd need to NS_ADD_SVGVALUE_OBSERVER() them in\nInit().)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    if (aAttr == nsSVGAtoms::orient) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      mOrientType->SetBaseVal(SVG_MARKER_ORIENT_ANGLE);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "You also need:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "nsIDOMSVGAngle *angle;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "mOrientAngle->GetBaseVal(&angle);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "angle->NewValueSpecifiedUnits(nsIDOMSVGAngle::SVG_ANGLETYPE_UNSPECIFIED,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "0.0f);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    }", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    if (aAttr == nsSVGAtoms::viewBox) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      nsIDOMSVGRect *viewbox;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      mViewBox->GetBaseVal(&viewbox);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      SetCoordCtxRect(viewbox);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    }", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    if (aAttr == nsSVGAtoms::preserveAspectRatio || aAttr == nsSVGAtoms::viewBox) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This seems wrong.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Why are you resetting mPreserveAspectRatio if viewBox is\nremoved?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      nsIDOMSVGPreserveAspectRatio *par;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      mPreserveAspectRatio->GetBaseVal(&par);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      par->SetAlign(nsIDOMSVGPreserveAspectRatio::SVG_PRESERVEASPECTRATIO_XMIDYMID);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      par->SetMeetOrSlice(nsIDOMSVGPreserveAspectRatio::SVG_MEETORSLICE_MEET);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    }", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+  }", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+  return nsSVGMarkerElementBase::UnsetAttr(aNameSpaceID, aAttr, aNotify);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+}", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonathan Watt", 
            "email": "Jonathan Watt"
        }, 
        {
            "date": "2006-01-30 10:43:46", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=210154) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "patch for marker only", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "New and improved with even more bloaty code than before!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If someone else wrote a function to determine which atom matched (if any) from\nan array of atoms that would help a little as the multiple if statements in the\nUnsetAttr could be recoded as a switch.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It seems bug 290967 is tracking removeAttribute being broken in general so I am\njust doing marker under this one (Especially as I think it is the first one to\nget a removeAttribute implementation).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Perhaps this should block bug 290967.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Do I need to change the GUID of nsIDOMSVGRect since I added a method at the\nend?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I am currently assuming its OK not to.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2006-02-01 02:00:53", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=210335) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "remove unnecessary code from UnsetAttr", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Although comment 10 said", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Need to call SetCoordCtxRect here.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "after resetting markerWidth", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It also said", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "And for that matter we should be checking for changes to markerWidth/Height in\n> DidModifySVGObservable and calling SetCoordCtxRect there too.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "(And while on the\n> subject of DidModifySVGObservable it should only be doing the sync ?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "mOrientAngle\n> stuff when 'observable' is mOrientType.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Note we aren't currently observing\n> mMarkerWidth/Height, so you'd need to NS_ADD_SVGVALUE_OBSERVER() them in\n> Init().)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If this change is made then the act of changing the value of markerWidth\nresults in a call to WillModifySVGObservable and so directly calling\nSetCoordCtxRect in UnsetAttr seems unnecessary.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Accordingly I have removed that\ncode in UnsetAttr", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2006-02-01 16:41:27", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "I'm about to leave on vacation for three weeks.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I've not had time to look at\nthis unfortunately, but to be honest I think this is too low priority for us to\nwant to further complicate the code with these changes before we do our major\nrewrite.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Maybe tor can take a look if you disagree Robert.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonathan Watt", 
            "email": "Jonathan Watt"
        }, 
        {
            "date": "2006-02-02 06:53:14", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=210473) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "corrections to nsSVGOrient", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'm not sure what major rewrite you envisage Jonathan.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This patch corrects the following issues with marker elements:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "a) removeAttribute does nothing", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "(further similar patches would be required to implement removeAttribute\n   correctly on other elements)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "b) DOM changes to refX, refY and viewBox are not tracked properly.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "c) Setting orient=\"20deg\" i.e.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "anything except \"auto\" does not work.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "In practice this is the less than 1% case.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "95% of the time in the SVG \n   I have seen orient=\"auto\" specified, the other 5% orient \n   given an invalid value rather than specified as an angle.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I am happy to split out b) and c) into a separate fix which would contain only\nthe nsSVGOrient class and changes to nsSVGMarkerElement (without the\nUnsetAttr).", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2006-02-02 12:29:27", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(In reply to comment #14)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> I am happy to split out b) and c) into a separate fix which would contain only\n> the nsSVGOrient class and changes to nsSVGMarkerElement (without the\n> UnsetAttr).", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If you could do that, it would be great.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "For the unset portion, instead of needing to write this sort of code for each\nelement, a table per element type and a base class unset method seems like it\nmight be a cleaner direction to go.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If you do modify an idl as you do in this patch, the uuid should be updated.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Do we need to resort to a [noscript] method for this, though?", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }, 
        {
            "date": "2006-02-03 03:44:26", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 210473 [details])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I have created bug 325728 to address comment 10 markerWidth/markerHeight\ntrakcing and the orient problem.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2006-03-07 10:36:22", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=214333) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "work in progress", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Hopefully this addresses the previous review comments although it is still\nincomplete.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It has base class unset code which should be OK for 95% of attributes.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Unusual values require code in each element.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Only the marker element implementation has been completed so far.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I made the unset method of nsIDOMSVGRect [noscript] because:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "a) it is not part of the SVG spec.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "b) I don't think we should allow calling Unset from javascript.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2006-03-14 09:03:39", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=215027) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "implement unset for all attributes", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Hopefully this covers everything now.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2006-04-06 10:38:36", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 215027 [details])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Looks like this will be implemented as part of bug 332162", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2007-06-26 08:20:14", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Looks to me like this was fixed by the check in for bug 332162.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2007-08-29 09:28:56", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=278789) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "update to tip (new style types already handle reset, misc changes)", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }, 
        {
            "date": "2007-08-29 09:36:46", 
            "sentences": [], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }, 
        {
            "date": "2007-08-29 09:38:11", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "More testcases in bug 290967.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }, 
        {
            "date": "2007-09-05 09:47:04", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 278789 [details])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      // Now check for one of the old style basetypes going away\n>+      nsCOMPtr<nsISVGValue> svg_value = GetMappedAttribute(aNamespaceID, aName);", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      if (svg_value) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        nsCOMPtr<nsIDOMSVGAnimatedAngle> a = do_QueryInterface(svg_value);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        if (a) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+          NS_WARNING(\"must provide element processing for unset angle\");", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        }", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        nsCOMPtr<nsIDOMSVGAnimatedBoolean> b = do_QueryInterface(svg_value);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        if (b) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+          NS_WARNING(\"must provide element processing for unset boolean\");", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        }", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        nsCOMPtr<nsIDOMSVGAnimatedInteger> i = do_QueryInterface(svg_value);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        if (i) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+          NS_WARNING(\"must provide element processing for unset integer\");", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        }", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I put this my original patch when there were lots of things with the old base\ntypes and I was afraid I might have missed some out.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "That's no longer the case\nso perhaps this should just go.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If you think it should stay then NS_ASSERTION\nis probably better than NS_WARNING.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "r=longsonr either way.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2007-09-05 10:10:01", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=279750) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "switch to NS_ASSERTION", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }, 
        {
            "date": "2007-09-05 11:51:32", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "+        nsCOMPtr<nsIDOMSVGAnimatedAngle> a = do_QueryInterface(svg_value);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+        NS_ASSERTION(!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "a, \"must provide element processing for unset angle\");", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+        nsCOMPtr<nsIDOMSVGAnimatedBoolean> b = do_QueryInterface(svg_value);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+        NS_ASSERTION(!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "b, \"must provide element processing for unset boolean\");", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+        nsCOMPtr<nsIDOMSVGAnimatedInteger> i = do_QueryInterface(svg_value);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+        NS_ASSERTION(!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "i, \"must provide element processing for unset integer\");", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This should all be #ifdef DEBUG, we don't need the QIs on non-debug builds", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+  if (aName == nsGkAtoms::filterRes && aNamespaceID == kNameSpaceID_None) {\n+    mFilterResX->SetBaseVal(0);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+    mFilterResY->SetBaseVal(0);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+    return nsGenericElement::UnsetAttr(aNamespaceID, aName, aNotify);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "why not just fall through here", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+  if (aNamespaceID == kNameSpaceID_None && aName == nsGkAtoms::numOctaves) {\n+    mNumOctaves->SetBaseVal(1);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+    return nsGenericElement::UnsetAttr(aNamespaceID, aName, aNotify);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+  }", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ditto", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+    if (processed) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+      return nsGenericElement::UnsetAttr(aNamespaceID, aName, aNotify);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+    }", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ditto, and elsewhere", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Is there no way to share the code for initializing and unsetting attributes?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It\nseems with this patch we have to write the default values in two places.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert O'Callahan (:roc) (Mozilla Corporation)", 
            "email": "Robert O'Callahan (:roc) (Mozilla Corporation)"
        }, 
        {
            "date": "2007-09-05 12:00:35", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(In reply to comment #26)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +  if (aName == nsGkAtoms::filterRes && aNamespaceID == kNameSpaceID_None) {\n> +    mFilterResX->SetBaseVal(0);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +    mFilterResY->SetBaseVal(0);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +    return nsGenericElement::UnsetAttr(aNamespaceID, aName, aNotify);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> why not just fall through here", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Because then you would end up in nsSVGElement::UnsetAttr and you would get the\nassertion that you had not overridden the unset i.e.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "the bit that you mentioned\nshould be ifdef DEBUG.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Calling nsGenericElement::UnsetAttr bypasses that.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2007-09-05 12:04:10", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Can we assert instead that the property has the default value?", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert O'Callahan (:roc) (Mozilla Corporation)", 
            "email": "Robert O'Callahan (:roc) (Mozilla Corporation)"
        }, 
        {
            "date": "2007-09-05 12:08:08", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(In reply to comment #28)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Can we assert instead that the property has the default value?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "In nsSVGElement::UnsetAttr you mean?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Only by encoding what the default value\nfor all of those attributes actually is there too I think!", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2007-09-05 12:17:18", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Will we eventually have animated angles, booleans and integers converted to the\noptimized length-style format, so these checks can go away, and also get rid of\nthe duplication of the default value?", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If so, then I can live with this patch.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert O'Callahan (:roc) (Mozilla Corporation)", 
            "email": "Robert O'Callahan (:roc) (Mozilla Corporation)"
        }, 
        {
            "date": "2007-09-05 12:20:47", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "I hope so, although I'd like Tor to confirm.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert Longson", 
            "email": "Robert Longson"
        }, 
        {
            "date": "2007-09-05 12:30:49", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Yes, the plan is to switch everything over.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I went this route because it\nseemed like it might be more palatable to the powers-that-be given the current\nstate of the tree freeze.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }, 
        {
            "date": "2007-09-05 12:50:23", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 278789 [details])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ok then.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "just wrap those QIs in #ifdef DEBUG.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert O'Callahan (:roc) (Mozilla Corporation)", 
            "email": "Robert O'Callahan (:roc) (Mozilla Corporation)"
        }, 
        {
            "date": "2007-09-05 13:29:41", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=279780) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "checkin version with #ifdef DEBUG around QIs", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }, 
        {
            "date": "2007-09-05 13:51:35", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Checked in.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }, 
        {
            "date": "2007-09-05 15:00:11", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Backed out - nsSVGClassValue is also a nsIDOMSVGAnimatedString, but is not a\nnsSVGAnimatedString.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }, 
        {
            "date": "2007-09-05 15:32:16", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=279803) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "add a [noscript] Clear to nsIDOMSVGAnimatedString so we can handle\nnsSVGClassValue simply", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }, 
        {
            "date": "2007-09-06 08:38:04", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Checked in.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "T Rowley (IBM)", 
            "email": "T Rowley (IBM)"
        }
    ], 
    "title": "removeAttribute doesn't effect some underlying DOM properties"
}