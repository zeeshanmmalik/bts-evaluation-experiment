{
    "project": "Mozilla", 
    "original_link": "http://dont.know.yet/505713", 
    "comments": [
        {
            "date": "2009-07-22 05:08:18", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "JarMaker.py supports handling multiple jar.mns at once, but only via the\ncommandline.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": " I'd like to actually use that feature in a script, and thus factor\nthat code into a method on the JarMaker class.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Axel Hecht [:Pike]", 
            "email": "Axel Hecht [:Pike]"
        }, 
        {
            "date": "2009-07-24 08:15:36", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=390466) [details]\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "factor the mutliple-file code into method, add support for callables as\nl10nbase\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This is basically just moving code from the __main__ code into a method, up to\none difference:\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I added support to have l10nbase directories as callables.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " They're called with\nthe deduced relativesrcdirs, and enable the caller to pass in lambdas like\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "lambda rel: os.path.join(topsrc, rel, 'locales', 'en-US')\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "to pick up files from en-US as part of l10n merge.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " In the regular builds, we do\nthis on a per-directory level and just pass l10nsrcdirs for merge, l10n, en-US.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "When I actually put a few jar.mns into one call, I need to tweak the\nrelativesrcdir into the path.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I went for callables so that the directory structure and logic of l10n merge\ncan stay within the build foo, and doesn't need hard-coding inside JarMaker.py.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Use case is\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "http://bitbucket.org/pike/langpacker/src/tip/build-langpack.py#cl-70.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " That\nscript creates a language pack without build dir, directly from sources.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Tested with a full Firefox build on os/x, too.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Axel Hecht [:Pike]", 
            "email": "Axel Hecht [:Pike]"
        }, 
        {
            "date": "2009-07-28 06:02:44", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 390466 [details])\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Trying Ted for this review, too.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Axel Hecht [:Pike]", 
            "email": "Axel Hecht [:Pike]"
        }, 
        {
            "date": "2009-08-10 08:22:19", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 390466 [details])\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+        l10ndirs += map(lambda s: os.path.normpath(os.path.abspath(s)),\n+                        localedirs)\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+      srcdirs = map(lambda s: os.path.normpath(os.path.abspath(s)),\n+                    sourcedirs) + \\\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Any reason not to use list comprehensions here?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " I think they're a bit more\nreadable in Python.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " (I realize you're just refactoring here.)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Also, it probably wouldn't hurt to write a Python unittest for these methods,\nalthough I wouldn't block your checkin on it, since you already have the jar.mn\ntests.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Ted Mielczarek [:ted, :luser]", 
            "email": "Ted Mielczarek [:ted, :luser]"
        }, 
        {
            "date": "2009-10-20 10:39:22", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=407316) [details]\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "adding tests for JarMaker.py\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I had landed the actual patch to JarMaker.py a bit ago,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "http://hg.mozilla.org/mozilla-central/rev/6920d39fa27c.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Here some tests for JarMaker.py, one for a really simple jar.mn, and the other\nfor the multi-relpath case.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I didn't go into doing an extensive test suite for JarMaker.py, we could do\nthat in a separate bug, too.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Axel Hecht [:Pike]", 
            "email": "Axel Hecht [:Pike]"
        }, 
        {
            "date": "2009-10-20 14:34:19", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Windows puked at me,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "http://tinderbox.mozilla.org/showlog.cgi?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "log=MozillaTry/1256065171.1256073644.23417.gz&fulltext=1#err0.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Gotta dig into that on a VM tomorrow.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": " I suspected line endings for a minute,\nbut I'm not sure where I would create different ones.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Axel Hecht [:Pike]", 
            "email": "Axel Hecht [:Pike]"
        }, 
        {
            "date": "2009-10-20 16:17:26", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 407316 [details])\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "New patch working on the try server, gonna attach that tomorrow.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "The unzip code had newline problems, I had to open then file with 'wb' there.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "And the manifest files are written out with unix line endings on windows, too,\nso I had to 'wb' the ref file for that as well.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Axel Hecht [:Pike]", 
            "email": "Axel Hecht [:Pike]"
        }, 
        {
            "date": "2009-10-21 14:30:34", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=407613) [details]\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "tests, now working, and with mozunit.py to report nicely\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This time, with love.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I created mozunit.py, which has a testrunner and testresult that together\ncreate output as our unit test frameworks likes it for stats.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " For example,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "TEST-PASS | tests/unit-JarMaker.py | test_a_simple_jar\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "TEST-PASS | tests/unit-JarMaker.py | test_k_multi_relative_jar\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Tested on try, and it did bump the number of checks.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I also did the whitespace fixes and some more fixes to the reference that I\nhadn't caught before I tried to reproduce all error messages.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'm not using mozunit.py for anything but unit-JarMaker.py yet, if it flies we\ncan migrate the other unit tests over in different bugs.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Axel Hecht [:Pike]", 
            "email": "Axel Hecht [:Pike]"
        }, 
        {
            "date": "2009-10-26 08:10:08", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 407613 [details])\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " PYUNITS := unit-Expression.py unit-Preprocessor.py unit-nsinstall.py \\\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "-           unit-printprereleasesuffix.py\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+           unit-printprereleasesuffix.py \\\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+           unit-JarMaker.py \\\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+           $(NULL)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Can you just move all the test names down to separate lines with two-space\nindent, while you're here?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+        self.stream.writeln(\"TEST-UNEXPECTED-FAIL | %s:%d | %s: %s\" % \n+                            (_f, _ln, _t, value.message))\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I think I'd just make this TEST-UNEXPECTED-FAIL | filename | blah blah at line\n%d\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This is good stuff, thanks!\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Ted Mielczarek [:ted, :luser]", 
            "email": "Ted Mielczarek [:ted, :luser]"
        }, 
        {
            "date": "2009-10-27 10:34:03", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "http://hg.mozilla.org/mozilla-central/rev/5cbe1e28ffb5, FIXED on central.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We should take both the factorization and the tests on 1.9.2, that's gonna make\nit a whole lot easier to create language packs locally for testing.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Axel Hecht [:Pike]", 
            "email": "Axel Hecht [:Pike]"
        }, 
        {
            "date": "2009-11-02 04:57:06", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 390466 [details])\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "a=me to land this as long as it lands with the tests on 1.9.2.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Ted Mielczarek [:ted, :luser]", 
            "email": "Ted Mielczarek [:ted, :luser]"
        }, 
        {
            "date": "2009-11-02 08:59:50", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "http://hg.mozilla.org/releases/mozilla-1.9.2/pushloghtml?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "changeset=c399c316ae22,\nlanded on 1.9.2 with tests.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Axel Hecht [:Pike]", 
            "email": "Axel Hecht [:Pike]"
        }
    ], 
    "title": "Factor out multiple jar-file handling in JarMaker.py"
}