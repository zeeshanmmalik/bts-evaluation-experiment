{
    "project": "Mozilla", 
    "original_link": "http://dont.know.yet/312630", 
    "comments": [
        {
            "date": "2005-10-16 09:22:51", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "In a discussion over IRC, bz, biesi and I realized we should always check to\nmake sure nsScriptError has sourceName and sourceLine defined for it.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This bug\nis to add assertions to that effect.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The goal is to fix any callers that pass in null for sourceName or sourceLine,\nand to ensure nobody does it in the future.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Alex Vincent", 
            "email": "Alex Vincent"
        }, 
        {
            "date": "2005-10-16 09:25:45", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=199745) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "patch", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "FYI, the discussion for this was borne of bug 248801.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Alex Vincent", 
            "email": "Alex Vincent"
        }, 
        {
            "date": "2005-10-16 13:20:55", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Bug 312634 and bug 312651 are both a result of the second assertion, about\nsourceLine.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I've hit no instances of the first assertion, but bug 312648 is a\ncase we're just begging to hit.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I would not be entirely opposed to making the second assertion a warning, but I\nwould still like to fix the callers.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Alex Vincent", 
            "email": "Alex Vincent"
        }, 
        {
            "date": "2005-10-19 23:22:41", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 199745 [details])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": ":( Too many bites on the second assertion.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Alex Vincent", 
            "email": "Alex Vincent"
        }, 
        {
            "date": "2005-10-19 23:49:12", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=200174) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "patch", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I've been running with the initial patch for quite a while, and would often hit\nthe second assertion (which this patch now makes a warning).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "However, I have\nnever hit the first assertion.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This patch is safe.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Alex Vincent", 
            "email": "Alex Vincent"
        }, 
        {
            "date": "2005-10-20 07:11:35", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Please don't add the warning until we've at least fixed the known bugs on that\nissue.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "No point cluttering up the debug output with random crap...", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Boris Zbarsky (:bz)", 
            "email": "Boris Zbarsky (:bz)"
        }, 
        {
            "date": "2005-10-20 07:33:35", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=200204) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "patch", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Just add the assertion, then, for source name.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Alex Vincent", 
            "email": "Alex Vincent"
        }, 
        {
            "date": "2005-10-20 08:08:14", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 200204 [details])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Need to test *sourceName too.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Boris Zbarsky (:bz)", 
            "email": "Boris Zbarsky (:bz)"
        }, 
        {
            "date": "2005-10-20 23:08:19", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "bz: any call to a javascript: url that has an error in it results in this\nassertion being hit.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "javascript:alert(Components.classes[\"FOO\"])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "00 ntdll!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "DbgBreakPoint", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "01 xpcom_core!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "nsDebugImpl::Break(char * aFile = 0x00e7e2e0", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\"m:/mozilla/js/src/xpconnect/src/nsScriptError.cpp\", int aLine = 131)+0x7e\n02 xpcom_core!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "nsDebugImpl::Assertion(char * aStr = 0x00e7e330 \"Need a non-null\nURI for the console service!\"", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ", char * aExpr = 0x00e7e314 \"sourceName &&", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "*sourceName\", char * aFile = 0x00e7e2e0", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\"m:/mozilla/js/src/xpconnect/src/nsScriptError.cpp\", int aLine = 131)+0x29e\n03 xpcom_core!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "NSGlue_Assertion(char * aStr = 0x00e7e330 \"Need a non-null URI for\nthe console service!\"", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ", char * aExpr = 0x00e7e314 \"sourceName && *sourceName\",\nchar * aFile = 0x00e7e2e0 \"m:/mozilla/js/src/xpconnect/src/nsScriptError.cpp\",\nint aLine = 131)+0x4d", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "04 xpc3250!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "nsScriptError::Init(unsigned short * message = 0x04358ed0, unsigned\nshort * sourceName = 0x100f6c50, unsigned short * sourceLine = 0x00000000,\nunsigned int lineNumber = 0, unsigned int columnNumber = 0, unsigned int flags =\n2, char * category = 0x01abad80 \"content javascript\")+0x2d", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "05 gklayout!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "NS_ScriptErrorReporter(struct JSContext * cx = 0x038595a8, char *\nmessage = 0x03c57d20 \"uncaught exception: Permission denied to get property\nUnnamedClass.classes\", struct JSErrorReport * report = 0x0012a104)+0x3c7\n06 js3250!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "js_ReportErrorAgain(struct JSContext * cx = 0x038595a8, char * message\n= 0x03c57ca8 \"uncaught exception: Permission denied to get property\nUnnamedClass.classes\", struct JSErrorReport * reportp = 0x0012a104)+0xc9\n07 js3250!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ReportError(struct JSContext * cx = 0x038595a8, char * message =\n0x03c57ca8 \"uncaught exception: Permission denied to get property\nUnnamedClass.classes\", struct JSErrorReport * reportp = 0x0012a104)+0x4e\n08 js3250!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "js_ReportErrorNumberVA(struct JSContext * cx = 0x038595a8, unsigned\nint flags = 0, <function> * callback = 0x00cf1efb, void * userRef = 0x00000000,\nunsigned int errorNumber = 0x93, int charArgs = 1, char * ap = 0x0012a16c\n\"???\")", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+0xe3", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "09 js3250!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "JS_ReportErrorNumber(struct JSContext * cx = 0x038595a8, <function> *\nerrorCallback = 0x00cf1efb, void * userRef = 0x00000000, unsigned int\nerrorNumber = 0x93, char * ap = 0x0012a16c \"???\")", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+0x27", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "0a js3250!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "js_ReportUncaughtException(struct JSContext * cx = 0x038595a8)+0x308\n0b js3250!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "JS_EvaluateUCScriptForPrincipals(struct JSContext * cx = 0x038595a8,\nstruct JSObject * obj = 0x03c78618, struct JSPrincipals * principals =\n0x03ca8e0c, unsigned short * chars = 0x0012a30c, unsigned int length = 0x20,\nchar * filename = 0x0012a4b0 \"javascript:alert(Components.classes[\"FOO\"])\",\nunsigned int lineno = 1, long * rval = 0x0012a268)+0x95", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "0c gklayout!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "nsJSContext::EvaluateString(class nsAString_internal * aScript =\n0x0012a2f4, void * aScopeObject = 0x03c78618, class nsIPrincipal * aPrincipal =\n0x03ca8e08, char * aURL = 0x0012a4b0", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\"javascript:alert(Components.classes[\"FOO\"])\", unsigned int aLineNo = 1, char *\naVersion = 0x00000000 \"\", class nsAString_internal * aRetValue = 0x0012a4f4, int", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* aIsUndefined = 0x0012a578)+0x2cf", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "0d gklayout!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "nsJSThunk::EvaluateScript(class nsIChannel * aChannel =\n0x03ddaa20)+0xe1d", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "0e gklayout!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "nsJSChannel::InternalOpen(int aIsAsync = 1, class nsIStreamListener", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* aListener = 0x03ddaaf0, class nsISupports * aContext = 0x00000000, class\nnsIInputStream ** aResult = 0x00000000)+0xb3", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "0f gklayout!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "nsJSChannel::AsyncOpen(class nsIStreamListener * aListener =\n0x03ddaaf0, class nsISupports * aContext = 0x00000000)+0x17", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "10 docshell!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "nsDocumentOpenInfo::Open(class nsIChannel * aChannel = 0x0432c730)+0x74\n11 docshell!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "nsURILoader::OpenURI(class nsIChannel * channel = 0x0432c730, int\naIsContentPreferred = 0, class nsIInterfaceRequestor * aWindowContext =\n0x03867e70)+0x498", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "...", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Alex Vincent", 
            "email": "Alex Vincent"
        }, 
        {
            "date": "2005-10-21 05:34:23", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Do we have a bug filed on that?", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Boris Zbarsky (:bz)", 
            "email": "Boris Zbarsky (:bz)"
        }, 
        {
            "date": "2010-05-04 01:08:08", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Moving to Core::XPConnect", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Philip Chee", 
            "email": "Philip Chee"
        }
    ], 
    "title": "nsScriptError::Init should assert for sourceName"
}