{
    "project": "Chrome", 
    "original_link": "http://dont.know.yet/35429", 
    "comments": [
        {
            "date": "2010-02-11 11:44:48", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "For sync, we currently have an in browser test harness, but it exercises a \nfull integration test requiring a live server.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Corner cases in a full \nintegration test are hard to mock out.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "What we want in addition is a nearly full integration test, but with the \nnetwork layer mocked out.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Sync uses the http bridge for all the communication \nit does, so it seems like a pretty good place to mock things out.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We can then \nexpect certain requests coming from the syncer, and expect certain responses \nand network behaviors.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "In particular, this will make it easier to test sync authentication, \nnotifications, and throttling at the sync-browser integration level.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We'll be \nable to test integration expectations without a live server.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/chron@chromium.org/", 
            "email": "/u/chron@chromium.org/"
        }, 
        {
            "date": "2010-02-11 11:47:22", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(No comment was entered for this change.)", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/chron@chromium.org/", 
            "email": "/u/chron@chromium.org/"
        }, 
        {
            "date": "2010-02-11 11:48:22", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(No comment was entered for this change.)", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/chron@chromium.org/", 
            "email": "/u/chron@chromium.org/"
        }, 
        {
            "date": "2010-02-11 15:39:51", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(No comment was entered for this change.)", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/chron@chromium.org/", 
            "email": "/u/chron@chromium.org/"
        }, 
        {
            "date": "2010-02-16 13:44:56", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "AuthWatcher::RenewAuthToken could benefit from this.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/chron@chromium.org/", 
            "email": "/u/chron@chromium.org/"
        }, 
        {
            "date": "2010-02-16 13:55:05", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(No comment was entered for this change.)", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/chron@chromium.org/", 
            "email": "/u/chron@chromium.org/"
        }, 
        {
            "date": "2010-02-16 13:59:56", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(No comment was entered for this change.)", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/mark@chromium.org/", 
            "email": "/u/mark@chromium.org/"
        }, 
        {
            "date": "2010-02-16 17:12:36", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(No comment was entered for this change.)", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/laforge@chromium.org/", 
            "email": "/u/laforge@chromium.org/"
        }, 
        {
            "date": "2010-02-28 15:59:33", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Alright, so I've been messing with this and I propose the following.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Brief: Create our own \"HttpPostProviderFactory\" that uses scripted interactions \ninstead of hitting the network to mock out all of the network traffic.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "More specifically", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Extend HttpPostProviderFactory to MockHttpPostProviderFactory\nExtend HttpPostProviderInterface to MockHttpPostProvider", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Extend ProfileSyncServiceTestHarness into a MockNetworkProfileSyncServiceTestHarness", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Add interface", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "MockPostExchange", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Add methods", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "SyncBackendHost::InitializeWithMockNetwork(...", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ", HttpPostProviderFactory* \nhttp_bridge_factory, HttpPostProviderFactory* auth_http_bridge_factory);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ProfileSyncService::InitializeBackendWithMockNetwork(...", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ", HttpPostProviderFactory* \nhttp_bridge_factory, HttpPostProviderFactory* auth_http_bridge_factory);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ProfileSyncService::EnableForUserWithMockNetwork(...", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ", HttpPostProviderFactory* \nhttp_bridge_factory, HttpPostProviderFactory* auth_http_bridge_factory);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Because EnableForUser calls InitializeBackend calls Initialize which currently \ncreates two new HttpPostProviderFactories.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The new test harness will override SetupSync and add methods AddAuthExchange and \nAddBridgeExchange.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Both AddAuthExchange and AddBridgeExchange will take MockPostExchanges.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "MockPostExchange will be an interface with methods describing the expected url, \npayload, etc.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "(whatever else is deemed to be necessary) and the resulting response \n(headers, content, etc.)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The order of these exchanges is given implicitly by the \norde rin which AddAuthExchange is called on the exchanges.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Why interface?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Because that allows us to write classes that implement \nMockPostExchange and can give us a more specific failed assertion than \"the sequence \nof bytes was wrong\".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Also, it moves the logic away so that we're not married to the \nsync stuff with the interface.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/alexgartrell/", 
            "email": "/u/alexgartrell/"
        }, 
        {
            "date": "2010-03-01 14:26:42", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Sounds good.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I might call it something other than exchange, but I think this concept \nworks fine.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/chron@google.com/", 
            "email": "/u/chron@google.com/"
        }, 
        {
            "date": "2010-03-01 14:55:30", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Hey alex -- I'd like to make a few suggestions here, even though I am not very familiar with \nthe code :)  It seems like the main goal here is to be able to inject a mock \nHttpPostProviderFactory into the system.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Currently, the SyncBackendHost has a \"new \nHttpBridgeFactory(...)\"", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "in there that needs to be plumbed out.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "May I suggest adding a ProfileSyncFactory::CreateHttpPostProviderFactory (yay a factory \nfactory!)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "and add a ProfileSyncFactory* parameter to the SyncBackendHost ctor.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "And you can \npass the factory_ pointer in when the SyncBackendHost is created in \nProfileSyncService::StartUp.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This way you can avoid adding testing methods to production classes, which is discouraged.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Additionally, it is preferred to use the gmock library (http://code.google.com/p/gmock/) rather \nthan creating custom mock classes.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "As a start, here are mock versions of the factory and the \nHttpPostProviderInterface:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "namespace sync_api {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "class HttpPostProviderFactoryMock : public HttpPostProviderFactory {\n public:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "MOCK_METHOD0(Create,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "HttpPostProviderInterface*());", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "MOCK_METHOD1(Destroy,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "void(HttpPostProviderInterface* http));", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "};", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "}  // namespace sync_api", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "namespace sync_api {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "class HttpPostProviderInterfaceMock : public HttpPostProviderInterface {\n public:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "MOCK_METHOD1(SetUserAgent,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "void(const char* user_agent));", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "MOCK_METHOD1(SetExtraRequestHeaders,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "void(const char * headers));", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "MOCK_METHOD2(SetURL,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "void(const char* url, int port));", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "MOCK_METHOD3(SetPostPayload,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "void(const char* content_type, int content_length, const char* content));", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "MOCK_METHOD2(MakeSynchronousPost,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "bool(int* os_error_code, int* response_code));", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "MOCK_CONST_METHOD0(GetResponseContentLength,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "int());", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "MOCK_CONST_METHOD0(GetResponseContent,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "const char*());", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "MOCK_CONST_METHOD1(GetResponseHeaderValue,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "const std::string(const std::string& name));", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "};", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "}  // namespace sync_api", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Please let me know if you have any questions about using gmock.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/skrul@chromium.org/", 
            "email": "/u/skrul@chromium.org/"
        }, 
        {
            "date": "2010-03-01 14:56:22", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Oops, I had the wrong link to gmock.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The correct one is:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "http://code.google.com/p/googlemock/", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/skrul@chromium.org/", 
            "email": "/u/skrul@chromium.org/"
        }, 
        {
            "date": "2010-03-16 20:35:31", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Hey Alex, were you still working on this?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Any roadblocks or updates?", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/tim@chromium.org/", 
            "email": "/u/tim@chromium.org/"
        }, 
        {
            "date": "2010-03-16 21:37:28", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Yeah sorry, Spring break was last week and the kind of messed everything up.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'm pretty close to done.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'll have patches in the next day or so.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/alexgartrell/", 
            "email": "/u/alexgartrell/"
        }, 
        {
            "date": "2010-03-18 02:15:00", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Before I completely code myself into a corner, are there any opinions on where I should \nput the examples?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The code style fits with the stuff in the live sync tests, but \nobviously it's not exactly the same.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Just figured I would ask before I code myself \ninto a corner.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Thanks", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/alexgartrell/", 
            "email": "/u/alexgartrell/"
        }, 
        {
            "date": "2010-03-21 23:27:14", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "The ugly truth is available: http://codereview.chromium.org/1158002", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The example shows how you might use it to blindly jump through authentication if you \ndon't care, but doesn't get into sync stuff.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I wanted your opinions before I dove \ninto implementing every possible exchange ever in a bad way.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Also, putting the bridges into the profile_sync_service class is what I'm least happy \nwith, but in setting up everything, you have to somehow inject setting those bridges \nin the backend host.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It would have involved a lot more hacking, so I thought I'd try \na bandaid before major surgery (alright, stitches :))", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/alexgartrell/", 
            "email": "/u/alexgartrell/"
        }, 
        {
            "date": "2010-03-24 15:05:42", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(No comment was entered for this change.)", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/tim@chromium.org/", 
            "email": "/u/tim@chromium.org/"
        }, 
        {
            "date": "2010-05-05 15:43:17", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(No comment was entered for this change.)", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "/u/nick@chromium.org/", 
            "email": "/u/nick@chromium.org/"
        }
    ], 
    "title": "Sync network integration test harness"
}