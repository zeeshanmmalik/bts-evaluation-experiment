{
    "contributors": [
        [
            "surkov-alexander", 
            "lexrank"
        ], 
        [
            "ginn-chen-r", 
            "email"
        ], 
        [
            "apinheiro", 
            "lexrank"
        ], 
        [
            "nijaba", 
            "email"
        ], 
        [
            "trev-saunders", 
            "lexrank"
        ]
    ], 
    "title": "thunderbird crashed on launch", 
    "comments": [
        {
            "date": "2012-03-07 09:05:50", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Lauching thunderbird directly results in a core-dump\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ProblemType: Bug\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "DistroRelease: Ubuntu 12.04\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Package: thunderbird 11.0~b4+build1-0ubuntu1\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ProcVersionSignature: Ubuntu 3.2.0-18.28-generic 3.2.9\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Uname: Linux 3.2.0-18-generic x86_64\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "AddonCompatCheckDisabled: False\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "AlsaVersion: Advanced Linux Sound Architecture Driver Version 1.0.24.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ApportVersion: 1.94-0ubuntu2\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Architecture: amd64\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ArecordDevices:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " **** List of CAPTURE Hardware Devices ****\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " card 0: Intel [HDA Intel], device 0: CONEXANT Analog [CONEXANT Analog]\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Subdevices: 1/1\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Subdevice #0: subdevice #0\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "AudioDevicesInUse:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " USER        PID ACCESS COMMAND\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " /dev/snd/controlC0:  nbarcet    2605 F.... ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "pulseaudio\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "BuildID: 20120302135656\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "CRDA: Error: [Errno 2] No such file or directory\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Card0.Amixer.info:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Card hw:0 'Intel'/'HDA Intel at 0xf2620000 irq 45'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Mixer name\t: 'Intel IbexPeak HDMI'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Components\t: 'HDA:14f15069,17aa214c,00100302 HDA:80862804,17aa21b5,00100000'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Controls      : 27\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Simple ctrls  : 9\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Card29.Amixer.info:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Card hw:29 'ThinkPadEC'/'ThinkPad Console Audio Control at EC reg 0x30, fw 6IHT39WW-1.14'\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Mixer name\t: 'ThinkPad EC 6IHT39WW-1.14'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Components\t: ''\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Controls      : 1\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Simple ctrls  : 1\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Card29.Amixer.values:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Simple mixer control 'Console',0\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Capabilities: pswitch pswitch-joined penum\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Playback channels: Mono\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "   Mono: Playback [on]\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Channel: beta\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Date: Wed Mar  7 09:51:39 2012\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "EcryptfsInUse: Yes\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ForcedLayersAccel: False\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "IncompatibleExtensions:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " EDS Contact Integration - <email address hidden>, Version=0.3.9, minVersion=7.0, maxVersion=11.0a1, Location=app-global, Type=extension, Active=Yes\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Dictionnaire franais Classique &amp; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Rforme 1990 - <email address hidden>, Version=4.3, minVersion=5.0, maxVersion=10.*, Location=app-profile, Type=extension, Active=Yes\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Auto Select Latest Message (restartless) - ID=autoselectlatestmessage@vano, Version=1.0, minVersion=3.3a1pre, maxVersion=10.*, Location=app-profile, Type=extension, Active=Yes\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Quicktext - ID={8845E3B3-E8FB-40E2-95E9-EC40294818C4}, Version=0.9.11.1, minVersion=5.0b2pre, maxVersion=10.*, Location=app-profile, Type=extension, Active=Yes\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Google Contacts - ID={BDD92442-0534-4D6F-A966-BAB7D561D781}, Version=0.6.40, minVersion=3.1, maxVersion=10.*, Location=app-profile, Type=extension, Active=Yes\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "InstallationMedia: Ubuntu 12.04 LTS \"Precise Pangolin\" - Alpha amd64 (20120201.2)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ProcEnviron:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " LANGUAGE=en_US:en\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " TERM=xterm\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " PATH=(custom, user)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " LANG=en_US.UTF-8\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " SHELL=/bin/bash\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Profiles: Profile0 (Default) - LastVersion=11.0/20120302135656\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "RunningIncompatibleAddons: True\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "SourcePackage: thunderbird\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "UpgradeStatus: Upgraded to precise on 2012-02-16 (19 days ago)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.bios.date: 02/01/2011\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.bios.vendor: LENOVO\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.bios.version: 6IET75WW (1.35 )\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.board.name: 2516CTO\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.board.vendor: LENOVO\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.board.version: Not Available\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.chassis.asset.tag: No Asset Information\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.chassis.type: 10\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.chassis.vendor: LENOVO\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.chassis.version: Not Available\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.modalias: dmi:bvnLENOVO:bvr6IET75WW(1.35):bd02/01/2011:svnLENOVO:pn2516CTO:pvrThinkPadT410:rvnLENOVO:rn2516CTO:rvrNotAvailable:cvnLENOVO:ct10:cvrNotAvailable:\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.product.name: 2516CTO\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.product.version: ThinkPad T410\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dmi.sys.vendor: LENOVO\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "nijaba", 
            "email": "nijaba"
        }, 
        {
            "date": "2012-03-07 09:05:50", 
            "sentences": [], 
            "name": "nijaba", 
            "email": "nijaba"
        }, 
        {
            "date": "2012-03-07 09:36:41", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Backtrace enclosed. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Could be related to libatk having been updated prior to this.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "nijaba", 
            "email": "nijaba"
        }, 
        {
            "date": "2012-03-07 10:16:53", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Status changed to 'Confirmed' because the bug affects multiple users.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "janitor", 
            "email": "janitor"
        }, 
        {
            "date": "2012-03-07 10:59:34", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Status changed to 'Confirmed' because the bug affects multiple users.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "janitor", 
            "email": "janitor"
        }, 
        {
            "date": "2012-03-07 11:40:21", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "This bug was fixed in the package atk1.0 - 2.3.91-0ubuntu2\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "---------------\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "atk1.0 (2.3.91-0ubuntu2) precise; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "urgency=low\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  * revert_set_name_change.patch: revert upstream change leading to     get_name, set_name loops in firefox code (lp: #948788)\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "janitor", 
            "email": "janitor"
        }, 
        {
            "date": "2012-03-07 12:27:21", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "After upgrading every hour, my problem persists, can anyone give a tip?\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "jrzabott", 
            "email": "jrzabott"
        }, 
        {
            "date": "2012-03-07 12:28:51", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "I've tried... ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "sudo apt-get install atk1.0, and it downloaded some libraries, and the problem persists...\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "jrzabott", 
            "email": "jrzabott"
        }, 
        {
            "date": "2012-03-07 12:40:40", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Sorry everybody, updated right now, problem solved, YOU ARE GREAT guys... ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ":D\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "jrzabott", 
            "email": "jrzabott"
        }, 
        {
            "date": "2012-03-07 12:46:38", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "BTW, a new upstream ATK release was done, reverting this change:\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "https://mail.gnome.org/archives/gnome-accessibility-devel/2012-March/msg00004.html\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Thanks for the testing and for pinging me.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "apinheiro", 
            "email": "apinheiro"
        }, 
        {
            "date": "2012-03-08 15:45:51", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "fixed for firefox as mentioned by Xerxes in bug #948788.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "doko", 
            "email": "doko"
        }, 
        {
            "date": "2012-03-07 11:20:56", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Not sure whose bug this is, but atk 2.3.91 contains this commit which triggers a stack exhaustion crash in Firefox:\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "http://git.gnome.org/browse/atk/commit/?id=7ebaa51b17fbca385d9d1f3dd026bd4770852d9b\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Firefox overloads AtkObject->get_name() with getNameCB() in nsAccessibleWrap.cpp, and getNameCB() calls atk_object_set_name().\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "chrisccoulson", 
            "email": "chrisccoulson"
        }, 
        {
            "date": "2012-03-07 11:37:03", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Do you have stack crash?\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }, 
        {
            "date": "2012-03-07 11:39:12", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "From the bug in Launchpad: https://launchpadlibrarian.net/95732761/gdb-thunderbird.txt\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "chrisccoulson", 
            "email": "chrisccoulson"
        }, 
        {
            "date": "2012-03-07 11:53:39", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Oh, I see. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We do lazy name setting so we do atk_object_set_name whenever we were asked for accessible name (atk_object_get_name). ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'm not sure whether we have another option to do this lazily.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "In general I think ATK code shouldn't allow the crash even if the server does something wrong. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So simple reentrance guard on atk side should help. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Alejandro?\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }, 
        {
            "date": "2012-03-07 12:12:11", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to alexander :surkov from comment #3)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Oh, I see. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We do lazy name setting so we do atk_object_set_name whenever we > were asked for accessible name (atk_object_get_name). ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'm not sure whether > we have another option to do this lazily.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So AFAIU, your implementation of _get_name is calling _set_name, and ATK implementation of _set_name is calling _get_name, right?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> In general I think ATK code shouldn't allow the crash even if the server > does something wrong. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So simple reentrance guard on atk side should help.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Alejandro?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "What kind of reentrance guard? ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Do you have any example on Firefox code?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Anyway, as this week is a GNOME release week, I think that it would be safer to just revert that change, and make a new release, and we could think on solve this issue later (probably after GNOME 3.4).\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "apinheiro", 
            "email": "apinheiro"
        }, 
        {
            "date": "2012-03-07 12:27:26", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to Alejandro Pieiro from comment #4)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> (In reply to alexander :surkov from comment #3)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > Oh, I see. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We do lazy name setting so we do atk_object_set_name whenever we > > were asked for accessible name (atk_object_get_name). ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'm not sure whether > > we have another option to do this lazily.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> So AFAIU, your implementation of _get_name is calling _set_name, and ATK\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> implementation of _set_name is calling _get_name, right?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "yes\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > In general I think ATK code shouldn't allow the crash even if the server > > does something wrong. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So simple reentrance guard on atk side should help.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > Alejandro?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> What kind of reentrance guard? ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Do you have any example on Firefox code?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "sorry for terms. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I meant something like this\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "1015,7 +1015,7 @@ atk_object_set_name (AtkObject *accessible,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "if (klass->set_name)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "{\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  static bool isReentrance = false;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  if (!isReentrance) {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    /* Do not notify for initial name setting. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "See bug 665870 */\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    isReentrance = true;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    notify = (atk_object_get_name (accessible) != NULL);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    isReentrance = false;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "}\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Anyway, as this week is a GNOME release week, I think that it would be safer > to just revert that change, and make a new release, and we could think on > solve this issue later (probably after GNOME 3.4).\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "unfortunately that will discover Thunderbird crash\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }, 
        {
            "date": "2012-03-07 12:49:26", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "FWIW, I have just made a new ATK release:\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "https://mail.gnome.org/archives/gnome-accessibility-devel/2012-March/msg00004.html\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Thanks for pinging me with this issue.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "apinheiro", 
            "email": "apinheiro"
        }, 
        {
            "date": "2012-03-07 13:29:59", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "after irc chat with Alejandro it seems we don't need to call atk_object_set_name at all. ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We override atkobject->get_name so we are guaranteed that we always deliver correct accessible name, in other words it doesn't make sense to call atk_object_set_name to change atkobject->accessible->name. ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Also calling the set_atk_object_name inside of atk_object_get_name could lead to weird things like described by this bug. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Also it makes name_changed signal to fire what makes name_changed signal irrelevant (AT asks accessible name and additionally gets name_changed signal).\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "atkobject->accessible->name is used only by default implementation of get_name/set_name so we shouldn't care to keep accessible->name updated. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Also we shouldn't worry to override atkobject->set_name because no one will call it.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "changing bug summary\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }, 
        {
            "date": "2012-03-07 13:48:05", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "just remove atk_object_set_name instances\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }, 
        {
            "date": "2012-03-07 14:55:45", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "We used to use aAtkObj->name as a cache of accessible name, it was long long ago.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Since you said calling atk_object_set_name inside of atk_object_get_name could lead to werid things, I'm wondering whether we should do atk_object_set_parent in getParentCB(), hmm...\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "ginn-chen-r", 
            "email": "ginn-chen-r"
        }, 
        {
            "date": "2012-03-07 15:01:46", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to Ginn Chen from comment #9)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Since you said calling atk_object_set_name inside of atk_object_get_name > could lead to werid things, I'm wondering whether we should do > atk_object_set_parent in getParentCB(), hmm...\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "yeah, I thought about the same. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "But iirc we have a bug for that.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }, 
        {
            "date": "2012-03-07 15:12:00", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to alexander :surkov from comment #10\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> yeah, I thought about the same. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "But iirc we have a bug for that.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "You mean bug 730841?\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "ginn-chen-r", 
            "email": "ginn-chen-r"
        }, 
        {
            "date": "2012-03-07 16:29:52", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to Ginn Chen from comment #11)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> (In reply to alexander :surkov from comment #10\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > yeah, I thought about the same. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "But iirc we have a bug for that.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> You mean bug 730841?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "nah, bug 716865, at least it has some related discussion (btw, bug 730841 was a follow up from that bug).\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }, 
        {
            "date": "2012-03-07 17:45:47", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to alexander :surkov from comment #8)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> just remove atk_object_set_name instances\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I suspect we can do a little more cleanup while here, but I'm not sure atm.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "you should also explicitly fire name change events right?\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "trev-saunders", 
            "email": "trev-saunders"
        }, 
        {
            "date": "2012-03-07 18:09:48", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to Trevor Saunders (:tbsaunde) from comment #13)\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> (In reply to alexander :surkov from comment #8)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > just remove atk_object_set_name instances\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> I suspect we can do a little more cleanup while here, but I'm not sure atm.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "we have only two instances, it sounds like there's nothing to clean up\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> you should also explicitly fire name change events right?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }, 
        {
            "date": "2012-03-08 06:15:20", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "I think the solution is\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "1) We implement both getNameCB and setNameCB, make sure setNameCB won't get into getNameCB. Same for parent, role, description, etc.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "or\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "2) We never call atk_object_set_*(), we use object->xxx = blahblahblah, in our code.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "However, IMHO,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "atk_object_set_name should just use accessible->name.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "If an implementation need to call abstract atk_object_get_name instead, it must have implemented atk_object_set_name too.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "ginn-chen-r", 
            "email": "ginn-chen-r"
        }, 
        {
            "date": "2012-03-09 14:24:43", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to Ginn Chen from comment #15)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> I think the solution is\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 1) We implement both getNameCB and setNameCB, make sure setNameCB won't get\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> into getNameCB.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "makes sense to be on safe side. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I'm fine with that.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Same for parent, role, description, etc.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I'd deal with them in follow ups. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Otherwise it might be not a good first bug at all.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> or\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 2) We never call atk_object_set_*(), we use object->xxx = blahblahblah, in\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> our code.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "API said that object->xxx shouldn't be public (atk_object->accessible).\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> However, IMHO,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> atk_object_set_name should just use accessible->name.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It doesn't sound like it's worth to cache accessible name since we always calculate the name on demand (also it's extra strings copy). ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "In gecko we don't fire name_change event for every changed name. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "So we get hard times to update accessible->name. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It sounds all we can do what we do now when we were asked for a name then update accessible->name.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "So I think we should go with 1)\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }, 
        {
            "date": "2012-03-09 15:34:44", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to alexander :surkov from comment #16)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> (In reply to Ginn Chen from comment #15)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > I think the solution is\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > 1) We implement both getNameCB and setNameCB, make sure setNameCB won't get\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > into getNameCB.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> makes sense to be on safe side. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I'm fine with that.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "seems good to me.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > Same for parent, role, description, etc.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> I'd deal with them in follow ups. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Otherwise it might be not a good first bug > at all.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "yeah, but each of them can probably be there own good first bug.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "trev-saunders", 
            "email": "trev-saunders"
        }, 
        {
            "date": "2012-03-12 01:52:44", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to alexander :surkov from comment #16)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > 2) We never call atk_object_set_*(), we use object->xxx = blahblahblah, in\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > our code.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> API said that object->xxx shouldn't be public (atk_object->accessible).\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I don't think setting object->xxx in getXXXCB is using it as public.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > However, IMHO,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > atk_object_set_name should just use accessible->name.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> It doesn't sound like it's worth to cache accessible name since we always > calculate the name on demand (also it's extra strings copy). ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "In gecko we > don't fire name_change event for every changed name. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "So we get hard times to > update accessible->name. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It sounds all we can do what we do now when we were > asked for a name then update accessible->name.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> So I think we should go with 1)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I don't think we should cache it, but I think we should keep accessible->name updated.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "We need to copy the string to gchar* anyway.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "ginn-chen-r", 
            "email": "ginn-chen-r"
        }, 
        {
            "date": "2012-03-12 02:10:18", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to Ginn Chen from comment #18)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> (In reply to alexander :surkov from comment #16)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > > 2) We never call atk_object_set_*(), we use object->xxx = blahblahblah, in\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > > our code.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > API said that object->xxx shouldn't be public (atk_object->accessible).\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> >\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> I don't think setting object->xxx in getXXXCB is using it as public.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "now - it doesn't since we use atk_object_set_name\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > So I think we should go with 1)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> I don't think we should cache it, but I think we should keep > accessible->name updated.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "this means a caching, no? ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Internally we don't keep calculated name, we always calculated it on demand. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Why would we need to keep accessible->name updated and how we are going to do that if we don't use atk_object_set_name?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> We need to copy the string to gchar* anyway.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "yep, just copy the string every time when we were asked. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Doesn't sound good?\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }, 
        {
            "date": "2012-03-12 07:31:49", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to alexander :surkov from comment #19)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> this means a caching, no? ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Internally we don't keep calculated name, we > always calculated it on demand. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Why would we need to keep accessible->name > updated and how we are going to do that if we don't use atk_object_set_name?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Just use obj->name = xxx\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "And we saved g_strdup() here.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > We need to copy the string to gchar* anyway.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> yep, just copy the string every time when we were asked. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Doesn't sound good?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Actually it's not possible.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "atk_object_get_name() returns const gchar*, caller will not free the return value.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "We have to keep it somewhere in AtkObject, otherwise we leak.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Another benefit is we can easier see what the atk object was in gdb/dbx.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "ginn-chen-r", 
            "email": "ginn-chen-r"
        }, 
        {
            "date": "2012-03-15 18:32:27", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to Ginn Chen from comment #20)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > > We need to copy the string to gchar* anyway.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > yep, just copy the string every time when we were asked. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Doesn't sound good?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Actually it's not possible.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> atk_object_get_name() returns const gchar*, caller will not free the return > value.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> We have to keep it somewhere in AtkObject, otherwise we leak.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I see\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So if provide getName/setName implementation that will use accessible->name to store a value then would it be acceptable solution?\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }, 
        {
            "date": "2012-03-15 19:00:35", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to alexander :surkov from comment #21)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> (In reply to Ginn Chen from comment #20)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > > > We need to copy the string to gchar* anyway.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > > \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > > yep, just copy the string every time when we were asked. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Doesn't sound good?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > Actually it's not possible.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > atk_object_get_name() returns const gchar*, caller will not free the return > > value.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > We have to keep it somewhere in AtkObject, otherwise we leak.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> I see\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> So if provide getName/setName implementation that will use accessible->name > to store a value then would it be acceptable solution?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "or we could do what we do for a bunch of other atk methods reutrning const gchar* nd use nsAccessibleWrap::ReturnString() which keeps a static nsCString and returns a pointer into its buffer, and so requires caller of atk method to copy returned string before calling another atk function, which I think its very likely the bridge will always do.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "trev-saunders", 
            "email": "trev-saunders"
        }, 
        {
            "date": "2012-03-15 20:47:57", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to Trevor Saunders (:tbsaunde) from comment #22)\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> or we could do what we do for a bunch of other atk methods reutrning const > gchar* nd use nsAccessibleWrap::ReturnString() which keeps a static > nsCString and returns a pointer into its buffer, and so requires caller of > atk method to copy returned string before calling another atk function, > which I think its very likely the bridge will always do.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I think I would try to avoid assumptions like this. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Ginn?\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "surkov-alexander", 
            "email": "surkov-alexander"
        }
    ], 
    "id": "948788", 
    "project": "Launchpad", 
    "original_link": "https://bugs.launchpad.net/ubuntu/+bug/948788"
}