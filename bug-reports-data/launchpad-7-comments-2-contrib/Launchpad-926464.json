{
    "contributors": [
        [
            "vadim-tk", 
            "email"
        ], 
        [
            "ayurchen", 
            "lexrank"
        ]
    ], 
    "title": "Can't compile galera/2.x", 
    "comments": [
        {
            "date": "2012-02-04 01:37:50", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Centos 6.2\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "revno: 114 \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "-Igcomm/src -Igcomm/src/gcomm -Igcache/src -Igcs/src -Iwsdb/src -Igalera/src galerautils/src/gu_utils++.cpp galerautils/src/gu_string.cpp: In function 'void gu::trim(std::string&)':\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "galerautils/src/gu_string.cpp:84:11: error: 'ssize_t' does not name a type galerautils/src/gu_string.cpp:86:10: error: 'ssize_t' was not declared in this scope galerautils/src/gu_string.cpp:86:18: error: expected ';' before 'begin'\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "galerautils/src/gu_string.cpp:86:29: error: 'begin' was not declared in this scope galerautils/src/gu_string.cpp:86:37: error: 's_length' was not declared in this scope galerautils/src/gu_string.cpp:90:26: error: expected ';' before 'end'\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "vadim-tk", 
            "email": "vadim-tk"
        }, 
        {
            "date": "2012-02-07 13:39:58", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Have you able to reproduce it ?\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It blocks us with RedHat / CentOS 6 binaries.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "vadim-tk", 
            "email": "vadim-tk"
        }, 
        {
            "date": "2012-02-07 15:55:44", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "We could not reproduce it, but hopefully the fix is in the latest commits.\r", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Sorry for delay, it had to go on top of some not very tested changes.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "ayurchen", 
            "email": "ayurchen"
        }, 
        {
            "date": "2012-02-07 16:23:19", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "with rev 115  I am getting another error:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "src -Iwsdb/src -Igalera/src galerautils/src/gu_dbug.c\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "galerautils/src/gu_resolver.cpp: In function 'unsigned int get_ifindex_by_addr(const gu::net::Sockaddr&)':\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "galerautils/src/gu_resolver.cpp:226:13: error: 'close' was not declared in this scope\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "vadim-tk", 
            "email": "vadim-tk"
        }, 
        {
            "date": "2012-02-07 18:10:47", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "How about now?\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "ayurchen", 
            "email": "ayurchen"
        }, 
        {
            "date": "2012-02-07 18:50:08", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Now it is:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "builder_unit_test([\"galera/tests/galera_check.passed\"], [\"galera/tests/galera_check\"])\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "/data/opt/vadim/src/xtradb-cluster/2.x/galera/tests/galera_check: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.15' not found (required by /data/opt/vadim/src/xtradb-cluster/2.x/galera/tests/galera_check)\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "scons: *** [galera/tests/galera_check.passed] Error 1\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "g++ -o gcomm/src/gmcast.o -c -Wno-long-long -Wno-deprecated -pedantic -ansi -Weffc++ -Wold-style-cast -fno-strict-aliasing -g -O3 -DNDEBUG -pipe -Wall -Wextra -Werror -Wno-unused-parameter -m64 -D_XOPEN_SOURCE=600 -DHAVE_COMMON_H -DGALERA_USE_GU_NETWORK -DHAVE_BYTESWAP_H -DHAVE_ENDIAN_H -DHAVE_BOOST_SHARED_PTR_HPP -DHAVE_BOOST_UNORDERED_MAP_HPP -DBOOST_DATE_TIME_POSIX_TIME_STD_CONFIG=1 -DGALERA_USE_BOOST_POOL_ALLOC=1 -DHAVE_ASIO_HPP -DHAVE_ASIO_SSL_HPP -DHAVE_ASIO_HPP -Icommon -Iasio -Igalerautils/src -Igcomm/src -Igcomm/src/gcomm -Igcache/src -Igcs/src -Iwsdb/src -Igalera/src gcomm/src/gmcast.cpp\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "In file included from gcomm/src/gcomm/view.hpp:16:0,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_message2.hpp:12,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_consensus.cpp:6:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp: In instantiation of 'gcomm::Map<K, V, C>::iterator gcomm::Map<K, V, C>::insert_unique(const typename gcomm::MapBase<K, V, C>::value_type&) [with K = gcomm::UUID; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "V = gcomm::evs::MessageNode; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "C = std::map<gcomm::UUID, gcomm::evs::MessageNode, std::less<gcomm::UUID>, std::allocator<std::pair<const gcomm::UUID, gcomm::evs::MessageNode> > >; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm::Map<K, V, C>::iterator = std::_Rb_tree_iterator<std::pair<const gcomm::UUID, gcomm::evs::MessageNode> >; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "typename gcomm::MapBase<K, V, C>::value_type = std::pair<const gcomm::UUID, gcomm::evs::MessageNode>]':\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/evs_message2.hpp:653:33:   required from here\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_value(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidate is:\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note: template<class K, class V> const V& gcomm::get_value(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_key(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidates are:\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note: template<class K, class V> const K& gcomm::get_key(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note: template<class K, class V> const K& gcomm::get_key(typename gcomm::Map<K, V>::const_iterator)\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp: In instantiation of 'gcomm::Map<K, V, C>::iterator gcomm::Map<K, V, C>::insert_unique(const typename gcomm::MapBase<K, V, C>::value_type&) [with K = gcomm::UUID; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "V = gcomm::evs::Node; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "C = std::map<gcomm::UUID, gcomm::evs::Node, std::less<gcomm::UUID>, std::allocator<std::pair<const gcomm::UUID, gcomm::evs::Node> > >; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm::Map<K, V, C>::iterator = std::_Rb_tree_iterator<std::pair<const gcomm::UUID, gcomm::evs::Node> >; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "typename gcomm::MapBase<K, V, C>::value_type = std::pair<const gcomm::UUID, gcomm::evs::Node>]':\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/evs_node.hpp:136:32:   required from here\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_value(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidate is:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note: template<class K, class V> const V& gcomm::get_value(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_key(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidates are:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note: template<class K, class V> const K& gcomm::get_key(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note: template<class K, class V> const K& gcomm::get_key(typename gcomm::Map<K, V>::const_iterator)\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp: In instantiation of 'gcomm::Map<K, V, C>::iterator gcomm::Map<K, V, C>::insert_unique(const typename gcomm::MapBase<K, V, C>::value_type&) [with K = const gcomm::UUID; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "V = gcomm::evs::Range; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "C = std::map<const gcomm::UUID, gcomm::evs::Range, std::less<const gcomm::UUID>, std::allocator<std::pair<const gcomm::UUID, gcomm::evs::Range> > >; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm::Map<K, V, C>::iterator = std::_Rb_tree_iterator<std::pair<const gcomm::UUID, gcomm::evs::Range> >; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "typename gcomm::MapBase<K, V, C>::value_type = std::pair<const gcomm::UUID, gcomm::evs::Range>]':\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/evs_consensus.cpp:273:13:   required from here\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_value(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidate is:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note: template<class K, class V> const V& gcomm::get_value(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_key(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidates are:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note: template<class K, class V> const K& gcomm::get_key(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note: template<class K, class V> const K& gcomm::get_key(typename gcomm::Map<K, V>::const_iterator)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "scons: *** [gcomm/src/evs_consensus.o] Error 1\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "In file included from gcomm/src/gcomm/view.hpp:16:0,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_message2.hpp:12,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_message2.cpp:7:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp: In instantiation of 'gcomm::Map<K, V, C>::iterator gcomm::Map<K, V, C>::insert_unique(const typename gcomm::MapBase<K, V, C>::value_type&) [with K = gcomm::UUID; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "V = gcomm::evs::MessageNode; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "C = std::map<gcomm::UUID, gcomm::evs::MessageNode, std::less<gcomm::UUID>, std::allocator<std::pair<const gcomm::UUID, gcomm::evs::MessageNode> > >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm::Map<K, V, C>::iterator = std::_Rb_tree_iterator<std::pair<const gcomm::UUID, gcomm::evs::MessageNode> >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "typename gcomm::MapBase<K, V, C>::value_type = std::pair<const gcomm::UUID, gcomm::evs::MessageNode>]':\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/evs_message2.hpp:653:33:   required from here\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_value(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidate is:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note: template<class K, class V> const V& gcomm::get_value(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_key(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidates are:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note: template<class K, class V> const K& gcomm::get_key(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note: template<class K, class V> const K& gcomm::get_key(typename gcomm::Map<K, V>::const_iterator)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "scons: *** [gcomm/src/evs_message2.o] Error 1\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "In file included from gcomm/src/gcomm/view.hpp:16:0,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_message2.hpp:12,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_node.hpp:8,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_node.cpp:5:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp: In instantiation of 'gcomm::Map<K, V, C>::iterator gcomm::Map<K, V, C>::insert_unique(const typename gcomm::MapBase<K, V, C>::value_type&) [with K = gcomm::UUID; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "V = gcomm::evs::MessageNode; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "C = std::map<gcomm::UUID, gcomm::evs::MessageNode, std::less<gcomm::UUID>, std::allocator<std::pair<const gcomm::UUID, gcomm::evs::MessageNode> > >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm::Map<K, V, C>::iterator = std::_Rb_tree_iterator<std::pair<const gcomm::UUID, gcomm::evs::MessageNode> >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "typename gcomm::MapBase<K, V, C>::value_type = std::pair<const gcomm::UUID, gcomm::evs::MessageNode>]':\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/evs_message2.hpp:653:33:   required from here\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_value(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidate is:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note: template<class K, class V> const V& gcomm::get_value(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_key(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidates are:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note: template<class K, class V> const K& gcomm::get_key(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note: template<class K, class V> const K& gcomm::get_key(typename gcomm::Map<K, V>::const_iterator)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp: In instantiation of 'gcomm::Map<K, V, C>::iterator gcomm::Map<K, V, C>::insert_unique(const typename gcomm::MapBase<K, V, C>::value_type&) [with K = gcomm::UUID; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "V = gcomm::evs::Node; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "C = std::map<gcomm::UUID, gcomm::evs::Node, std::less<gcomm::UUID>, std::allocator<std::pair<const gcomm::UUID, gcomm::evs::Node> > >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm::Map<K, V, C>::iterator = std::_Rb_tree_iterator<std::pair<const gcomm::UUID, gcomm::evs::Node> >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "typename gcomm::MapBase<K, V, C>::value_type = std::pair<const gcomm::UUID, gcomm::evs::Node>]':\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/evs_node.hpp:136:32:   required from here\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_value(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidate is:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note: template<class K, class V> const V& gcomm::get_value(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_key(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidates are:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note: template<class K, class V> const K& gcomm::get_key(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note: template<class K, class V> const K& gcomm::get_key(typename gcomm::Map<K, V>::const_iterator)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "100%: Checks: 1, Failures: 0, Errors: 0\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Running suite(s): Galera time functions\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "100%: Checks: 1, Failures: 0, Errors: 0\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Running suite(s): Galera FIFO functions\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "In file included from gcomm/src/gcomm/view.hpp:16:0,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_message2.hpp:12,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_input_map2.hpp:24,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_input_map2.cpp:6:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp: In instantiation of 'gcomm::Map<K, V, C>::iterator gcomm::Map<K, V, C>::insert_unique(const typename gcomm::MapBase<K, V, C>::value_type&) [with K = gcomm::UUID; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "V = gcomm::evs::MessageNode; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "C = std::map<gcomm::UUID, gcomm::evs::MessageNode, std::less<gcomm::UUID>, std::allocator<std::pair<const gcomm::UUID, gcomm::evs::MessageNode> > >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm::Map<K, V, C>::iterator = std::_Rb_tree_iterator<std::pair<const gcomm::UUID, gcomm::evs::MessageNode> >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "typename gcomm::MapBase<K, V, C>::value_type = std::pair<const gcomm::UUID, gcomm::evs::MessageNode>]':\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/evs_message2.hpp:653:33:   required from here\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_value(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidate is:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note: template<class K, class V> const V& gcomm::get_value(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_key(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidates are:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note: template<class K, class V> const K& gcomm::get_key(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note: template<class K, class V> const K& gcomm::get_key(typename gcomm::Map<K, V>::const_iterator)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp: In instantiation of 'gcomm::Map<K, V, C>::iterator gcomm::Map<K, V, C>::insert_unique(const typename gcomm::MapBase<K, V, C>::value_type&) [with K = gcomm::InputMapMsgKey; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "V = gcomm::evs::InputMapMsg; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "C = std::map<gcomm::InputMapMsgKey, gcomm::evs::InputMapMsg, std::less<gcomm::InputMapMsgKey>, boost::fast_pool_allocator<std::pair<const gcomm::InputMapMsgKey, gcomm::evs::InputMapMsg>, boost::default_user_allocator_new_delete, DummyMutex> >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm::Map<K, V, C>::iterator = std::_Rb_tree_iterator<std::pair<const gcomm::InputMapMsgKey, gcomm::evs::InputMapMsg> >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "typename gcomm::MapBase<K, V, C>::value_type = std::pair<const gcomm::InputMapMsgKey, gcomm::evs::InputMapMsg>]':\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/evs_input_map2.cpp:303:13:   required from here\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_value(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidate is:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note: template<class K, class V> const V& gcomm::get_value(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_key(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidates are:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note: template<class K, class V> const K& gcomm::get_key(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note: template<class K, class V> const K& gcomm::get_key(typename gcomm::Map<K, V>::const_iterator)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "scons: *** [gcomm/src/evs_node.o] Error 1\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "100%: Checks: 2, Failures: 0, Errors: 0\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Running suite(s): Galera UUID utils\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "100%: Checks: 1, Failures: 0, Errors: 0\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Running suite(s): Galera LOCK_STEP utils\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "scons: *** [gcomm/src/evs_input_map2.o] Error 1\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "In file included from gcomm/src/gcomm/view.hpp:16:0,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/gcomm/protolay.hpp:18,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/gcomm/transport.hpp:15,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/gmcast.hpp:14,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/gmcast.cpp:5:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp: In instantiation of 'gcomm::Map<K, V, C>::iterator gcomm::Map<K, V, C>::insert_unique(const typename gcomm::MapBase<K, V, C>::value_type&) [with K = std::basic_string<char>; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "V = gcomm::GMCast::AddrEntry; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "C = std::map<std::basic_string<char>, gcomm::GMCast::AddrEntry, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, gcomm::GMCast::AddrEntry> > >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm::Map<K, V, C>::iterator = std::_Rb_tree_iterator<std::pair<const std::basic_string<char>, gcomm::GMCast::AddrEntry> >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "typename gcomm::MapBase<K, V, C>::value_type = std::pair<const std::basic_string<char>, gcomm::GMCast::AddrEntry>]':\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gmcast.cpp:537:57:   required from here\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_value(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidate is:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note: template<class K, class V> const V& gcomm::get_value(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_key(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidates are:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note: template<class K, class V> const K& gcomm::get_key(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note: template<class K, class V> const K& gcomm::get_key(typename gcomm::Map<K, V>::const_iterator)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "In file included from gcomm/src/gcomm/view.hpp:16:0,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/gcomm/protolay.hpp:18,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_proto.hpp:14,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                 from gcomm/src/evs_proto.cpp:11:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp: In instantiation of 'gcomm::Map<K, V, C>::iterator gcomm::Map<K, V, C>::insert_unique(const typename gcomm::MapBase<K, V, C>::value_type&) [with K = gcomm::UUID; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "V = gcomm::evs::MessageNode; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "C = std::map<gcomm::UUID, gcomm::evs::MessageNode, std::less<gcomm::UUID>, std::allocator<std::pair<const gcomm::UUID, gcomm::evs::MessageNode> > >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm::Map<K, V, C>::iterator = std::_Rb_tree_iterator<std::pair<const gcomm::UUID, gcomm::evs::MessageNode> >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "typename gcomm::MapBase<K, V, C>::value_type = std::pair<const gcomm::UUID, gcomm::evs::MessageNode>]':\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/evs_message2.hpp:653:33:   required from here\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_value(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidate is:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note: template<class K, class V> const V& gcomm::get_value(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_key(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidates are:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note: template<class K, class V> const K& gcomm::get_key(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note: template<class K, class V> const K& gcomm::get_key(typename gcomm::Map<K, V>::const_iterator)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp: In instantiation of 'gcomm::Map<K, V, C>::iterator gcomm::Map<K, V, C>::insert_unique(const typename gcomm::MapBase<K, V, C>::value_type&) [with K = gcomm::UUID; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "V = gcomm::evs::Node; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "C = std::map<gcomm::UUID, gcomm::evs::Node, std::less<gcomm::UUID>, std::allocator<std::pair<const gcomm::UUID, gcomm::evs::Node> > >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm::Map<K, V, C>::iterator = std::_Rb_tree_iterator<std::pair<const gcomm::UUID, gcomm::evs::Node> >; ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "typename gcomm::MapBase<K, V, C>::value_type = std::pair<const gcomm::UUID, gcomm::evs::Node>]':\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/evs_node.hpp:136:32:   required from here\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_value(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidate is:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note: template<class K, class V> const V& gcomm::get_value(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:275:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: error: no matching function for call to 'get_key(const value_type&)' gcomm/src/gcomm/map.hpp:224:17: note: candidates are:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note: template<class K, class V> const K& gcomm::get_key(const typename gcomm::Map<K, V>::value_type&)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:269:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note: template<class K, class V> const K& gcomm::get_key(typename gcomm::Map<K, V>::const_iterator)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "gcomm/src/gcomm/map.hpp:263:14: note:   template argument deduction/substitution failed:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "gcomm/src/gcomm/map.hpp:224:17: note:   couldn't deduce template parameter 'K'\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "scons: *** [gcomm/src/gmcast.o] Error 1\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "scons: *** [gcomm/src/evs_proto.o] Error 1\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "100%: Checks: 2, Failures: 0, Errors: 0\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Running suite(s): Galera Str util suite\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "100%: Checks: 3, Failures: 0, Errors: 0\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Running suite(s): Galera misc utils functions\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "100%: Checks: 1, Failures: 0, Errors: 0\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Total tests failed: 0\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "vadim-tk", 
            "email": "vadim-tk"
        }, 
        {
            "date": "2012-02-07 20:37:43", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Vadim, have you by any chance copied build directory from some other machine as opposed to doing a clean checkout? ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "If so, you should clean bzr tree before proceeding. ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Also could you please post the command line you're using to build galera?\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "ayurchen", 
            "email": "ayurchen"
        }, 
        {
            "date": "2012-02-07 20:47:25", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Alex,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "To double check, I made bzr branch into totally new directory, so I am sure this is clean build.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I do build as:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "./scripts/build.sh\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "vadim-tk", 
            "email": "vadim-tk"
        }, 
        {
            "date": "2012-02-07 21:37:42", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Have you mangled/modified gcc and/or libstdc++ packages on that system? ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "What are their versions? ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Do they come from CentOS? ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Could you try to build on another CentOS machine? ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Me and Teemu tried to reproduce it independently with no success.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It looks very much like the build environment on that machine is broken. ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I can understand missing includes, but this:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "/data/opt/vadim/src/xtradb-cluster/2.x/galera/tests/galera_check: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.15' not found (required by /data/opt/vadim/src/xtradb-cluster/2.x/galera/tests/galera_check)\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "is clearly not a source code problem.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "ayurchen", 
            "email": "ayurchen"
        }, 
        {
            "date": "2012-02-07 22:00:50", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Alex,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "That's right. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I have custom gcc 4.7 there.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I moved back to gcc 4.4 that comes with CentOS 6.2, and not all is fine. ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Sorry.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "vadim-tk", 
            "email": "vadim-tk"
        }
    ], 
    "id": "926464", 
    "project": "Launchpad", 
    "original_link": "https://bugs.launchpad.net/ubuntu/+bug/926464"
}