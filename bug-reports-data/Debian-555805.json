{
    "project": "Debian", 
    "original_link": "http://dont.know.yet/555805", 
    "comments": [
        {
            "date": "2009-11-11 21:35:48", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Package: debhelper", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Version: 7.4.3", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Severity: wishlist", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Tags: patch", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This patch alters build system auto-selection process a bit and allows dh_auto_*\nto pick up a more specific derived build system than the first buildable one\nfrom the @BUILDSYSTEMS array.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The main advantage of this method is to allow\nmore specific build systems which are below the main one (e.g.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "cmake vs\nmakefile) to make some compatibility non-breaking changes to the build process\nin auto-selection mode.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "1) The first check_auto_buildable() build system found in the order of\n@BUILDSYSTEMS is always considered to be the main.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The build system further in\nthe @BUILDSYSTEMS array may only be auto-selected if it is", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "check_auto_buildable() as well AND it is derived from the \"main\" build system\n(this condition ensures it is similar to the main one).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "2) The deeper a build system is in the inheritance tree, the more specific it\nis assumed to be. Auto selection process chooses the most specific build system.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If a couple of build systems are found on the same specificness level, the one\ncoming earlier in the @BUILDSYSTEMS is preferred.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This method still allows to keep backwards compatibility because auto-selectable\nbuild systems are shipped only with debhelper.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This should be enough to ensure\nthat compatibility breaking changes do not to slip to derived build systems.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "-- System Information:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Debian Release: squeeze/sid", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "APT prefers unstable", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "APT policy: (500, 'unstable'), (500, 'testing'), (101, 'experimental')\nArchitecture: amd64 (x86_64)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Kernel: Linux 2.6.31-1-amd64 (SMP w/1 CPU core)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Locale: LANG=lt_LT.UTF-8, LC_CTYPE=lt_LT.UTF-8 (charmap=UTF-8)\nShell: /bin/sh linked to /bin/dash", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Versions of packages debhelper depends on:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ii  binutils                      2.20-3     The GNU assembler, linker and bina\nii  dpkg-dev                      1.15.4.1   Debian package development tools\nii  file                          5.03-3     Determines file type using \"magic\"\nii  html2text                     1.3.2a-14  advanced HTML to text converter\nii  man-db                        2.5.6-4    on-line manual pager\nii  perl                          5.10.1-7   Larry Wall's Practical Extraction \nii  perl-base                     5.10.1-7   minimal Perl system\nii  po-debconf                    1.0.16     tool for managing templates file t", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "debhelper recommends no packages.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Versions of packages debhelper suggests:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "pn  dh-make                       <none>     (no description available)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "-- no debconf information", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Modestas Vainius <modestas@vainius.eu>", 
            "email": "Modestas Vainius <modestas@vainius.eu>"
        }, 
        {
            "date": "2009-11-12 13:36:12", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "How is doing this complicated thing different from simply reordering\ncmake before makefile in @BUILDSYSTEMS?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It seems like either change\nwould have equivilant results.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "see shy jo", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Joey Hess <joeyh@debian.org>", 
            "email": "Joey Hess <joeyh@debian.org>"
        }, 
        {
            "date": "2009-11-12 21:12:51", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Hello,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "On ketvirtadienis 12 Lapkritis 2009 20:36:12 Joey Hess wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> How is doing this complicated thing different from simply reordering\n> cmake before makefile in @BUILDSYSTEMS?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It seems like either change\n> would have equivilant results.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It is similar, but I believe my method is safer.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I will explain.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Suppose the package supports both distutils and cmake (I know its rather \nunrealistic in real world, but possible).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Current @BUILDSYSTEMS order is like:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "our @BUILDSYSTEMS = (", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\"autoconf\",", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\"perl_makemaker\",", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\"makefile\",", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\"python_distutils\",", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\"perl_build\",", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\"cmake\",", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\"ant\",", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ");", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "So the package would auto-build with python_distutils currently.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "In order to \nprefer cmake to makefile with current code and not to break build system \nencapsulation, we have to move cmake before makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So after such a move, \nthe package will start auto-building with cmake rather than distutils.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "With my patch applied, this particular package will continue building with \ndistutils while all other typical cmake packages will auto-select cmake build \nsystem in all steps (rather than just configure).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This is because the concept \nof \"related\" (i.e.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "derived) is introduced to auto-selection process.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If you \nwant even more control, we could invent our own variable (or subroutine) \nrather than generic @ISA to describe that the particular build system is \nrelated and more specific than the other one.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Alternatively we could move cmake after makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "But if we had a package \nwhich supported makefile (plain) and distutils build systems, it would start \nbuilding with distutils rather than makefile after this move.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I don't think my patch is 100% safe.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "However, I believe it reduces the \nprobability of backwards compatibility breakages to bare minimum.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Do you agree \nthat we need to solve this problem one way or the other?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Currently, cmake is \nstuck with possibility to customize configure step only unless the build \nsystem is manually forced.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius <modestas@vainius.eu>", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Modestas Vainius <modestas@vainius.eu>", 
            "email": "Modestas Vainius <modestas@vainius.eu>"
        }, 
        {
            "date": "2009-11-12 15:47:57", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> I don't think my patch is 100% safe.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "However, I believe it reduces the \n> probability of backwards compatibility breakages to bare minimum", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "A package that is currently built with plain makefile (or autoconf),\nbut also has a cmakefile seems more likely than one with distutils plus\ncmake.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The chance of breakage switching from makefile to cmake is probably\nless than distutils to cmake, but is still very real.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Do you agree that we need to solve this problem one way or the other?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Currently, cmake is stuck with possibility to customize configure step\n> only unless the build system is manually forced.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Obviously yes, but I hope reordering (implicitly or explicitly) the\nbuild systems is not the only way to accomplish that.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We could store the build system used for configure in", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "debian/buildsystem.debhelper and have that override autodetection for\nthe other steps.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "see shy jo", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Joey Hess <joeyh@debian.org>", 
            "email": "Joey Hess <joeyh@debian.org>"
        }, 
        {
            "date": "2009-11-13 11:52:30", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Hello,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "On ketvirtadienis 12 Lapkritis 2009 22:47:57 Joey Hess wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Obviously yes, but I hope reordering (implicitly or explicitly) the\n> build systems is not the only way to accomplish that.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> We could store the build system used for configure in", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> debian/buildsystem.debhelper and have that override autodetection for\n> the other steps.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Yeah it would be, but.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "unfortunately that's not less troublesome because:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "1) dh_auto_configure might be called more than once with different --\nsourcedirectory/--builddirectory options;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "2) dh_auto_configure might not be called at all (i.e. overrided);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "3) some build systems do not use configure step. So we would have to log build \nsystem usage at each step somehow.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius <modestas@vainius.eu>", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Modestas Vainius <modestas@vainius.eu>", 
            "email": "Modestas Vainius <modestas@vainius.eu>"
        }, 
        {
            "date": "2009-11-13 13:12:36", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Hello,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "On penktadienis 13 Lapkritis 2009 11:52:30 Modestas Vainius wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> On ketvirtadienis 12 Lapkritis 2009 22:47:57 Joey Hess wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > Obviously yes, but I hope reordering (implicitly or explicitly) the\n> > build systems is not the only way to accomplish that.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> >", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > We could store the build system used for configure in", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > debian/buildsystem.debhelper and have that override autodetection for\n> > the other steps.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Yeah it would be, but.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "unfortunately that's not less troublesome because:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 1) dh_auto_configure might be called more than once with different --\n> sourcedirectory/--builddirectory options;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 2) dh_auto_configure might not be called at all (i.e.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "overrided);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 3) some build systems do not use configure step.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So we would have to log\n>  build system usage at each step somehow.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Actually, I think I got a bit better idea which is a mix of yours and mine.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I \nwill post a patch in ~6 hours from now but in short, auto-selection process \nwould look like:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "1) Do a simple check_auto_buildable() test (exactly like it is now - the first \ncheck_auto_buildable() (based on the @BUILDSYSTEMS order) build system is \nselected) for current step.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "If found it becomes the base one.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If not found, NO \nbuild system could be auto-selected, the process terminates.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "2) Then do the same simple check_auto_buildable() for all steps before current \none.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "E.g.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "if we are at dh_auto_install, collect check_auto_buildable() results \nfor \"configure\" and \"build\"", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "3) Test all build systems found in 2) for isa() relationship against the base \none found in 1).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The first one for which condition is true is assumed to be \nauto-selected for current step.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If the condition isn't true for either, the \nbase build system (found in 2) ) is assumed to be auto-selected for current \nstep.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "What do you think?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This process takes both feedback from earlier steps and \nspecificness into account.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius <modestas@vainius.eu>", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Modestas Vainius <modestas@vainius.eu>", 
            "email": "Modestas Vainius <modestas@vainius.eu>"
        }, 
        {
            "date": "2009-11-14 04:24:04", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Hello,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "On penktadienis 13 Lapkritis 2009 13:12:36 Modestas Vainius wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> On penktadienis 13 Lapkritis 2009 11:52:30 Modestas Vainius wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > On ketvirtadienis 12 Lapkritis 2009 22:47:57 Joey Hess wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > > Obviously yes, but I hope reordering (implicitly or explicitly) the\n> > > build systems is not the only way to accomplish that.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > >", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > > We could store the build system used for configure in", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > > debian/buildsystem.debhelper and have that override autodetection for\n> > > the other steps.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> >", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > Yeah it would be, but.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "unfortunately that's not less troublesome\n> > because:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> >", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > 1) dh_auto_configure might be called more than once with different --\n> > sourcedirectory/--builddirectory options;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > 2) dh_auto_configure might not be called at all (i.e.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "overrided);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > 3) some build systems do not use configure step.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So we would have to log\n> >  build system usage at each step somehow.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Actually, I think I got a bit better idea which is a mix of yours and mine.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">  I will post a patch in ~6 hours from now but in short, auto-selection\n>  process would look like:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 1) Do a simple check_auto_buildable() test (exactly like it is now - the\n>  first check_auto_buildable() (based on the @BUILDSYSTEMS order) build\n>  system is selected) for current step.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "If found it becomes the base one.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If\n>  not found, NO build system could be auto-selected, the process terminates.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 2) Then do the same simple check_auto_buildable() for all steps before\n>  current one.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "E.g.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "if we are at dh_auto_install, collect", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">  check_auto_buildable() results for \"configure\" and \"build\"\n>", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 3) Test all build systems found in 2) for isa() relationship against the\n>  base one found in 1).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The first one for which condition is true is assumed\n>  to be auto-selected for current step.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If the condition isn't true for\n>  either, the base build system (found in 2) ) is assumed to be\n>  auto-selected for current step.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "The patch is attached.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It is an optimized version of the same algorithm as \nwritten above with an additional condition in 3) (i.e.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "both isa(base) and \ncheck_auto_buildable(currentstep) must be true for a candidate build system).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Read a patch header / code for a reworded description.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I hope you like it.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I don't see how more safely we could do this.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius <modestas@vainius.eu>", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Modestas Vainius <modestas@vainius.eu>", 
            "email": "Modestas Vainius <modestas@vainius.eu>"
        }, 
        {
            "date": "2009-11-16 14:51:17", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 1) Find the first (in @BUILDSYSTEMS order) auto-buildable build system in\n> the current build step.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "If found, it becomes the base one.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Otherwise,\n> auto-selection process fails.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 2) Look for a more specific (i.e.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "deeper in the inheritance tree) build system\n> that is both auto-selectable in any build step coming before the current one\n> and auto-buildable in current one.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If such a build system is found, auto-select\n> it for current step as well.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Otherwise, auto-select the base build system found\n> in 1).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Auto-selection process succeeds.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "If a packaxge has both a CMakeLists.txt and a GNUmakefile,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "dh_auto_configure will currently use the makefile build system, do\nnothing, and futher steps will build and install using the GNUmakefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "With this change, dh_auto_configure will:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "1. Find the first auto-buildable build system, which is still makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "2.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Hmm, based on your description above, it would find cmake, and use\n   it, which is a behavior change.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "However, the code actually skips\n   doing so, because there is no build step before configure;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "makefile is still used.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Then dh_auto_build will:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "1. Find the first auto-buildable build system, which is still makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "2. Find the more specific build system cmake, and use it.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So it seems this only works because cmake.pm currently inherits the\nbuild step from makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Slightly different story for dh_auto_test:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "1. First is still makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "2. More specific is again cmake; which is used.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So, this only works because cmake.pm's test method calls SUPER and\ndoes not do anything that is really cmake specific.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If cmake had a  \"cmake-test\" program that the test method ran, it could\nin this situation break, because the configure step did not use cmake.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I think this works for cmake only through a certian measure of luck.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "But, it does currently work.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So the risk of making this change is that we have to beware the above\nscenario when making changes to cmake.pm, or when adding future build\nsystems after cmake that similarly derive from makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "see shy jo", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Joey Hess <joeyh@debian.org>", 
            "email": "Joey Hess <joeyh@debian.org>"
        }, 
        {
            "date": "2009-11-17 02:22:10", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Hello,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "On pirmadienis 16 Lapkritis 2009 21:51:17 Joey Hess wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> If a packaxge has both a CMakeLists.txt and a GNUmakefile,\n> dh_auto_configure will currently use the makefile build system, do\n> nothing, and futher steps will build and install using the GNUmakefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "No, currently makefile.pm build system *passes through* in configure step.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Therefore, if there are CMakeLists.txt and GNUmakefile, dh_auto_configure will \nauto-select cmake build system.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This is valid because your initial \ndh_auto_configure (7.0.x) had \"-x configure\" check rather than \"-f Makefile\" \nlike the rest of steps.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Currently \"-x configure\" gets caught in autotools \nbuild system at configure step.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> With this change, dh_auto_configure will:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 1.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Find the first auto-buildable build system, which is still makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 2.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Hmm, based on your description above, it would find cmake, and use\n>    it, which is a behavior change.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "However, the code actually skips\n>    doing so, because there is no build step before configure;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">    makefile is still used.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This patch has absolutely no influence on configure step because there is no \nbuild steps before it hence no candidates can be generated from them.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "So the \ncode path remains 100% the same here.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Actually, that's the main safety enhancement over my first (and rather bad) \nattempt to solve this bug.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "A build system MUST have been auto-selected by a \nprevious step to become a candidate for current one (a variant of your idea to \nlog previously used build system).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Then dh_auto_build will:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 1.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Find the first auto-buildable build system, which is still makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Yes.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 2.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Find the more specific build system cmake, and use it.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> So it seems this only works because cmake.pm currently inherits the\n> build step from makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Yes, because dh_auto_configure would use cmake AND because cmake inherits from \nmakefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Both are key concepts here.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Read below.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Slightly different story for dh_auto_test:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 1.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "First is still makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> 2.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "More specific is again cmake; which is used.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> So, this only works because cmake.pm's test method calls SUPER and\n> does not do anything that is really cmake specific.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "That's exactly the point.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Answer yourself a question if you want `dh_auto_*` \nand `dh_auto_* --buildsystem=cmake` to behave differently for a cmake-only \npackage.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I guess the answer is no.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "But  even now if we added anything to \ncmake.pm which was makefile.pm incompatible, that would inevitably happen.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Therefore, cmake.pm makes a contract with makefile.pm \"not to break simple \nmakefile packages\" by inheriting from it.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "A general rule of OOP programming is \nthat a subclass can only (re)implement or extend the described behaviour of \nthe base class.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "In other words, cmake.pm (or anything inheriting from \nmakefile.pm for that matter) MUST be able to build simple Makefile based \npackages (in our case, at least when build system is not manually enforced).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Since you have a complete control over auto-buildable build systems in \ndebhelper, the only thing you need to do is to make sure that all build \nsystems deeper in the inheritance tree are able to auto-build packages of \ntheir bases, i.e.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "they do not break their contract.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> If cmake had a  \"cmake-test\" program that the test method ran, it could\n> in this situation break, because the configure step did not use cmake.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "As I said above, dh_auto_configure chooses cmake at the moment.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "If it didn't, \ncmake build system would not be auto-buildable with current debhelper in some \ncases.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "However, if e.g.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "dh_auto_configure was overriden as noop in \ndebian/rules, your scenario could trigger breakage.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Therefore, new \ncmake::test() code, or better yet cmake::check_auto_buildable(test), must \ndetermine if cmake::configure() was actually executed before doing anything \ncmake specific and fallback to behaviour of its base class if it wasn't.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I \nwill enhance my #555807 patch to cover this (even though the actualy test() \nchange in there is harmless for simple Makefile based packages).", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> I think this works for cmake only through a certian measure of luck.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> But, it does currently work.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> So the risk of making this change is that we have to beware the above\n> scenario when making changes to cmake.pm, or when adding future build\n> systems after cmake that similarly derive from makefile.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Fortunately, you have a complete control over this process and you can enforce \nthese \"abide contract\" rules for all new auto-buildable build systems and \nenhancements of old ones.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It might be a bit a burden, but in my opinion it is \nworth it.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This patch adds new possibilities and consistency to auto selection process, \nit helps to keep stuff properly encapsulated.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "On the other hand, currently \n#555807 patch could be applied to makefile.pm as it is and it would not cause \nany breakage.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "But we want everything cmake specific in cmake.pm, don't we?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I also attach (improved_bs_autoselection2.diff) even more optimized version of \nthe previous improved_bs_autoselection.diff patch.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Functionality-wise, they \nare identical, just this one does the same with less code and without \npointless redundant check_auto_buildable() calls.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius <modestas@vainius.eu>", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Modestas Vainius <modestas@vainius.eu>", 
            "email": "Modestas Vainius <modestas@vainius.eu>"
        }, 
        {
            "date": "2009-11-16 20:11:32", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +               # Now look for a more specific build system that is auto-buildable in\n> +               # both any previous and current steps.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So says the comment, and the commit message, but not the code:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\tfor my $prevstep (BUILD_STEPS) {", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\t\tlast if ($prevstep eq $step);", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\t\t# Find the first build system that is auto-buildable in $prevstep.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\t\tfor $system (@buildsystems) {", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\t\t\tnext unless defined $system;", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\t\t\t$system = create_buildsystem_instance($system, @_) unless ref $system;", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\t\t\tif ($system->check_auto_buildable($prevstep)) {", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\t\t\t\t# If a candidate build system is both more specific than the\n> +\t\t\t\t\t\t# base build system, and auto-buildable in current step, it's\n> +\t\t\t\t\t\t# the one we are looking for.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\t\t\t\tif ($system->isa(ref $base) && $system->check_auto_buildable($step)) {\n> +\t\t\t\t\t\t\treturn $system;", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This may return a system before it has tested every prior step in\nBUILD_STEPS.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\t\t\t\t}", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\t\t\t\telse {", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> +\t\t\t\t\t\t\t# It's pointless to consider this build system once again\n> +\t\t\t\t\t\t\t$system = undef;", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "BTW,", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This mutates @buildsystems via the binding established via the foreach.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "But that is a) too far above for that the be clear on first reading, and\nb) one of perl's absolute worst features for code maintainability, which\nI prefer to avoid.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "see shy jo", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Joey Hess <joeyh@debian.org>", 
            "email": "Joey Hess <joeyh@debian.org>"
        }, 
        {
            "date": "2009-11-16 20:36:52", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius wrote:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> On pirmadienis 16 Lapkritis 2009 21:51:17 Joey Hess wrote:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > If a packaxge has both a CMakeLists.txt and a GNUmakefile,\n> > dh_auto_configure will currently use the makefile build system, do\n> > nothing, and futher steps will build and install using the GNUmakefile.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> No, currently makefile.pm build system *passes through* in configure step.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Therefore, if there are CMakeLists.txt and GNUmakefile, dh_auto_configure will \n> auto-select cmake build system.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So, when cmake support was added to debhelper 7.3.0, the behavior of\ndh_auto_configure for such a package actually changed.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "In retrospect,\nthen, we failed to get that right, and are only lucky that it seems to\nhave broken nothing.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It also means that if another build system is added to @BUILDSYSTEMS in\nthe future, we again risk breakage, even if it is added after makefile.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "see shy jo", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Joey Hess <joeyh@debian.org>", 
            "email": "Joey Hess <joeyh@debian.org>"
        }, 
        {
            "date": "2009-11-17 19:01:11", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Hello,", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "On antradienis 17 Lapkritis 2009 03:11:32 Joey Hess wrote:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">> +               # Now look for a more specific build system that is\n>> auto-buildable in +               # both any previous and current steps.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">So says the comment, and the commit message, but not the code:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Now I see that this comment is confusing, I didn't express myself too well \nhere.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">> +                     for my $prevstep (BUILD_STEPS) {", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">> +                             last if ($prevstep eq $step);", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">> +", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">> +                             # Find the first build system that is\n>> auto-buildable in $prevstep.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "+                             for $system\n>> (@buildsystems) {", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">> +                                     next unless defined $system;", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">> +                                     $system =", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">> create_buildsystem_instance($system, @_) unless ref $system; +            \n>>                         if ($system->check_auto_buildable($prevstep)) { + \n>>                                            # If a candidate build system\n>> is both more specific than the +                                          \n>>   # base build system, and auto-buildable in current step, it's +         \n>>                                    # the one we are looking for.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "+        \n>>                                     if ($system->isa(ref $base) &&\n>> $system->check_auto_buildable($step)) { +                                 \n>>                    return $system;", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">This may return a system before it has tested every prior step in\n>BUILD_STEPS", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "The idea was to get an auto-buildable match on any (i.e.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "a single, but not \nall) prior step as well as current step.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "But that does not matter any more \nbecause this method is based on the flaw you pointed out.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> This may return a system before it has tested every prior step in\n> BUILD_STEPS.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > +\t\t\t\t\t\t}", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > +\t\t\t\t\t\telse {", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > +\t\t\t\t\t\t\t# It's pointless to consider this build system", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "once again", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> > +\t\t\t\t\t\t\t$system = undef;", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> BTW,", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> This mutates @buildsystems via the binding established via the foreach.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> But that is a) too far above for that the be clear on first reading, and\n> b) one of perl's absolute worst features for code maintainability, which\n> I prefer to avoid.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Ok, I won't use this technique again.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> So, when cmake support was added to debhelper 7.3.0, the behavior of\n> dh_auto_configure for such a package actually changed.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "In retrospect,\n> then, we failed to get that right, and are only lucky that it seems to\n> have broken nothing.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> It also means that if another build system is added to @BUILDSYSTEMS in\n> the future, we again risk breakage, even if it is added after makefile.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This basically means that current check_auto_buildable() API has hit its \nlimits and was wrongly designed from the start.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Fortunately, we can freely \nchange it as it does not concern 3rd party build systems.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I have a couple of thoughts how to solve this unfortunate problem.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I'll try to \nwrite code and post a patch later today.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Hopefully, I get things right this \ntime, hrrr.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This auto-selection thing is really so complicated.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius <modestas@vainius.eu>", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Modestas Vainius <modestas@vainius.eu>", 
            "email": "Modestas Vainius <modestas@vainius.eu>"
        }, 
        {
            "date": "2009-11-17 13:34:11", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius wrote:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> >So says the comment, and the commit message, but not the code:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Now I see that this comment is confusing, I didn't express myself too well \n> here.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> The idea was to get an auto-buildable match on any (i.e.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "a single, but not \n> all) prior step as well as current step.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "But that does not matter any more \n> because this method is based on the flaw you pointed out.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Hmm, well.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "*Is* matching just one, not all previous steps good enough?", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "As written, it does always ensure that the configure step can autoselect\nthe build system.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "That could be argued to be good enough, at least with\nthe current set of build systems.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "see shy jo", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Joey Hess <joeyh@debian.org>", 
            "email": "Joey Hess <joeyh@debian.org>"
        }, 
        {
            "date": "2009-11-17 21:37:47", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Hello,", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "On antradienis 17 Lapkritis 2009 20:34:11 Joey Hess wrote:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> As written, it does always ensure that the configure step can autoselect\n> the build system.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "That could be argued to be good enough, at least with\n> the current set of build systems.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "No.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "cmake generates Makefiles.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "So prior and post cmake run at configure step \nmakefile::check_auto_configure(\"configure\") will return different results \n(false prior, true after) unless we don't fix current flaw in it.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "So my \ncurrent code won't work.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Therefore, my idea is to move \"feedback evaluation\" to build system itself \nrather than Dh_Buildsystems.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Patch coming today, changes will be rather minor.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius <modestas@vainius.eu>", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Modestas Vainius <modestas@vainius.eu>", 
            "email": "Modestas Vainius <modestas@vainius.eu>"
        }, 
        {
            "date": "2009-11-18 02:08:32", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Hello,", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "the patch is attached.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It suffers from the limitation that a derived build \nsystem cannot add/reimplement anything which might possibly break parent build \nsystem.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "At the moment however, this limitation is not a problem.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "When it \nbecomes such, extensive logging mechanism might help to solve it partially \n(i.e.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "excluding overrides).", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius <modestas@vainius.eu>", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Modestas Vainius <modestas@vainius.eu>", 
            "email": "Modestas Vainius <modestas@vainius.eu>"
        }, 
        {
            "date": "2009-11-18 21:35:29", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Source: debhelper", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Source-Version: 7.4.4", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We believe that the bug you reported is fixed in the latest version of\ndebhelper, which is due to be installed in the Debian FTP archive:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "debhelper_7.4.4.dsc", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "to main/d/debhelper/debhelper_7.4.4.dsc", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "debhelper_7.4.4.tar.gz", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "to main/d/debhelper/debhelper_7.4.4.tar.gz", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "debhelper_7.4.4_all.deb", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "to main/d/debhelper/debhelper_7.4.4_all.deb", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "A summary of the changes between this version and the previous one is\nattached.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Thank you for reporting the bug, which will now be closed.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "If you\nhave further comments please address them to 555805@bugs.debian.org,\nand the maintainer will reopen the bug report if appropriate.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Debian distribution maintenance software", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "pp.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Joey Hess <joeyh@debian.org> (supplier of updated debhelper package)", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "(This message was generated automatically at their request; if you\nbelieve that there is a problem with it please contact the archive\nadministrators by mailing ftpmaster@debian.org)", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "-----BEGIN PGP SIGNED MESSAGE-----", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Hash: SHA256", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Format: 1.8", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Date: Wed, 18 Nov 2009 14:44:21 -0500", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Source: debhelper", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Binary: debhelper", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Architecture: source all", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Version: 7.4.4", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Distribution: unstable", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Urgency: low", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Maintainer: Joey Hess <joeyh@debian.org>", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Changed-By: Joey Hess <joeyh@debian.org>", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Description:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "debhelper  - helper programs for debian/rules", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Closes: 532805 548382 554509 555659 555677 555805 555807 555899 556384\nChanges:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "debhelper (7.4.4) unstable; urgency=low", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ".", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* The makefile buildsystem (and derived buildsystems cmake, autoconf, etc)\n     now supports parallel building by default, as specified via\n     DEB_BUILD_OPTIONS.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Closes: #532805", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* dh_auto_*: Add --max-parallel option that can be used to control\n     or disable parallel building.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--max-parallel=1 will disable parallel\n     building, while --max-parallel=N will limit the maximum number of\n     parallel processes that can be specified via DEB_BUILD_OPTIONS.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* Added some hacks to avoid warnings about unavailable jobservers when\n     debhelper runs make, and the parent debian/rules was run in parallel\n     mode (as dpkg-buildpackage -j currently does).", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "* Thanks, Modestas Vainius for much of the work on parallel build support.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* Add deprecation warnings for -u to the documentation, since putting\n     options after -- is much more sane.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "(However, -u will not go away any\n     time soon.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ") Closes: #554509", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* Separate deprecated programs in the list of commands in debhelper(7).\n     Closes: #548382", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* Adjust code to add deprecation warning for compatibility level 4.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "(Man page already said it was deprecated.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ") Closes: #555899", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* dh_installdocs: Warn if a doc-base file cannot be parsed to find a\n     document id. Closes: #555677", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* Typo. Closes: #555659", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* cmake: Set CTEST_OUTPUT_ON_FAILURE when running test suite.\n     Closes: #555807 (Modestas Vainius)", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "* autoconf: If configure fails, display config.log. Intended to make\n     it easier to debug configure script failures on autobuilders.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Closes: #556384", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "* Improve build system autoselection process; this allows cmake to be\n     autoselected for steps after configure, instead of falling back to\n     makefile once cmake generated a makefile.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Closes: #555805\n     (Modestas Vainius)", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Checksums-Sha1:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "72684bf4512676e0e5792931473ac4414002a60d 1547 debhelper_7.4.4.dsc\n dce8fc35de852743dcaced4b69b28dac46b94c32 346944 debhelper_7.4.4.tar.gz\n c6085d152588337c16d9c91088d1de00c27427ac 456988 debhelper_7.4.4_all.deb\nChecksums-Sha256:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "c8d77d94390117dd8198e12a96080c2e734cb2ee2aef243caf8e88b9aa3105e2 1547 debhelper_7.4.4.dsc\n 832fdb0718483667e2d1400f3553de8a20bed782c77ba4538736c08b457ffa31 346944 debhelper_7.4.4.tar.gz\n 7b247d9dc292ca092f83080b56b86263bfebd728e0ee2971928fbd7cddd256bb 456988 debhelper_7.4.4_all.deb\nFiles:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "d6d3d3fd964b50715434afcf462aef31 1547 devel optional debhelper_7.4.4.dsc\n 655ce94cf8c0f1d6cd1e9fe1925cb085 346944 devel optional debhelper_7.4.4.tar.gz\n 61b3d758e18662b8606a8173236844c8 456988 devel optional debhelper_7.4.4_all.deb", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "-----BEGIN PGP SIGNATURE-----", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Version: GnuPG v1.4.10 (GNU/Linux)", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "iQIVAwUBSwRPpskQ2SIlEuPHAQj0JQ/9G4MHTp7ZY5O9VMmN0Ppph7YALhKI2Hs1\nPPQhShPrd5Q9k1kqoAZX0mBnnxF19SbgeCHbU96vGda+PPfsdj6OJA22Er7Eo5V+\nFGvRZSK/xg/iN+dhDSqjno5OxSfUTa/5kNNVHSpVJiPywvADxWft8DIZgI7kfkVB\nxVqGip1HU+qoVPBCwxDYsf4H/bNXIVwofLy3TKW0QVIEDZHwKCQ9LxNRG36hKto8\nRp6SlIyz24zF2yYKUGlMxOnBlTOz1CM1+ZjttW0/KUuy86CCfMUAlJqWYeiH8cAH\nmWDIFDmnl0RL5jmcukJCo9rPCCaMZuo9t720xWOt+FcZJ0a23/m4Cqrwtdpo3cyS\nOVlHMyK8A6AhPXKU3GSR7RduvCk2jddfIN5rCjvNY2WLJ4LpJmHwo14bPzWwFoNt\nvpiuWtqOauFhcWAeKyC1zm3uXQyiwMAdjhfwhjWgcYwMJGywZF2NSj6xnBM9eysL\n0jYP81ZoDWQNPMsURViZ0BuDiZeAebVpEcUDYCWEDDTgG19Gxi0BdH6u7ilM0HeZ\nLHyU92QX/LgZnTA0RtkpxNg7ZAXWlp7megXQXfKbCfQ7gGQ+u4OBCBxc2TBdKG7M\nETl9YkxP0YbBX/mDj6gpG4JF482dOmmfULO8DH8bkjH3ye4vBhyUaSc+ohNHdQXK\nPYsOsmEhayE=", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "=CptE", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "-----END PGP SIGNATURE-----", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Joey Hess <joeyh@debian.org>", 
            "email": "Joey Hess <joeyh@debian.org>"
        }, 
        {
            "date": "2009-11-19 11:55:31", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Note that the --list code has not been updated to select more specific\nbuild systems.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "see shy jo", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Joey Hess <joeyh@debian.org>", 
            "email": "Joey Hess <joeyh@debian.org>"
        }, 
        {
            "date": "2009-11-19 21:39:53", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Hello,", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "On ketvirtadienis 19 Lapkritis 2009 18:55:31 Joey Hess wrote:", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Note that the --list code has not been updated to select more specific\n> build systems.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Yay, code duplication, forgot about it.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The patch for this is attached.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "(0002th).", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "0003th is another dh 7.0.x compatibility (I believe) bug fix for cmake.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "--", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Modestas Vainius <modestas@vainius.eu>", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Modestas Vainius <modestas@vainius.eu>", 
            "email": "Modestas Vainius <modestas@vainius.eu>"
        }
    ], 
    "title": "\nAutoselect a more specific buildsystem if it is available"
}