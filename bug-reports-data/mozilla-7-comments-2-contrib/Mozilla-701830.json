{
    "contributors": [
        [
            "Matt Brubeck (:mbrubeck)", 
            "lexrank"
        ], 
        [
            "Kartikaya Gupta (:kats)", 
            "email"
        ], 
        [
            "Alex Keybl [:akeybl]", 
            "lexrank"
        ], 
        [
            "Andreea Pod", 
            "email"
        ]
    ], 
    "title": "Rescaling at new resolution after zoom does not occur", 
    "comments": [
        {
            "date": "2011-11-11 12:55:57", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "1. go to the preferences\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "2. select reformat text on zoom\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "3. go to a website with some text and zoom\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Expected: no pixelation on the text\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Actual: text does not get reformatted on zoom\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Note:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "1. known issue I believe, didn't see a bug on it.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Naoki Hirata :nhirata", 
            "email": "Naoki Hirata :nhirata"
        }, 
        {
            "date": "2011-11-11 16:24:03", 
            "sentences": [], 
            "name": "Matt Brubeck (:mbrubeck)", 
            "email": "Matt Brubeck (:mbrubeck)"
        }, 
        {
            "date": "2011-11-11 16:24:54", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "This isn't just text, it's any content. ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Working on this now.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Patrick Walton (:pcwalton)", 
            "email": "Patrick Walton (:pcwalton)"
        }, 
        {
            "date": "2011-11-11 20:08:31", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Created attachment 573993 [details] [diff] [review]\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "WIP patch.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "WIP patch attached.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Patrick Walton (:pcwalton)", 
            "email": "Patrick Walton (:pcwalton)"
        }, 
        {
            "date": "2011-11-14 08:04:04", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Comment on attachment 573993 [details] [diff] [review]\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "WIP patch.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">@@ -945,16 +946,18 @@ abstract public class GeckoApp\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">         tab.updateTitle(title);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">         loadFavicon(tab);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">         mMainHandler.post(new Runnable() {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">             public void run() {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">                 if (Tabs.getInstance().isSelectedTab(tab))\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">                     mBrowserToolbar.setTitle(tab.getDisplayTitle());\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">                 onTabsChanged();\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+                mSoftwareLayerClient.geckoLoadedNewContent();\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">             }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">         });\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">     }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'm not sure this is the best place for this call. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It's ok for now, but we might need something a little earlier, when gecko first starts loading the new content. ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This will only get triggered after the page is loaded.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    private PanZoomPosition mGeckoPanZoomPosition;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    /* The pan/zoom position that Gecko is currently displaying. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "If null, we don't know. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "*/\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    private PanZoomPosition mPendingPanZoomPosition;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    /*\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+     * The pan/zoom position that we're telling Gecko to display. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "If this is non-null, Gecko is\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+     * currently busy panning or zooming to this location.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+     */\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    private PanZoomPosition mQueuedPanZoomPosition;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    /*\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+     * The pan/zoom position we're waiting to send to Gecko. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It will be sent once >+     * Gecko finishes panning to mPendingPanZoomPosition.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+     */\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    private boolean mDrawPending;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Could you place the comments for the fields above the field, rather than below? ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "This is inconsistent and much more confusing :/\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">     public void endDrawing(int x, int y, int width, int height) {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        if (mGeckoPanZoomPosition == null) {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            /*\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+             * Ignore the draw. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We don't know where Gecko is currently panned or zoomed to, so we >+             * can't safely draw.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+             */\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            mDrawPending = true;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            return;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        Log.e(\"Fennec\", \"### Drawing at \" + mGeckoPanZoomPosition.toJSON());\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">         LayerController controller = getLayerController();\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">-        //controller.unzoom(); ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " /* FIXME */\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        float zoomFactor = controller.getZoomFactor();\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        controller.unzoom();\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">         controller.notifyViewOfGeometryChange();\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">-        mViewportController.setVisibleRect(mGeckoVisibleRect);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">-\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">-        if (mGeckoVisibleRect != null) {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">-            RectF layerRect = mViewportController.untransformVisibleRect(mGeckoVisibleRect,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">-                                                                         getPageSize());\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">-            mTileLayer.origin = new PointF(layerRect.left, layerRect.top);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">-        }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        //mViewportMetrics.setPosition(mGeckoPanZoomPosition);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        mTileLayer.origin = mGeckoPanZoomPosition.untransformPoint();\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">         repaint(new Rect(x, y, x + width, y + height));\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Don't really need a separate method for repaint(); ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "can be inlined.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        mDrawPending = false;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        mPendingPanZoomPosition = null;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        if (mQueuedPanZoomPosition != null) {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            //PanZoomPosition position = mQueuedPanZoomPosition.scale(1.0f / zoomFactor);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            mQueuedPanZoomPosition = null;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            //sendPanZoomPositionToGecko(position);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        } else if (mDrawPending) {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            mDrawPending = false;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            GeckoAppShell.scheduleRedraw();\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">     }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I assume the commented-out lines here will be uncommented eventually.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Also, how can mDrawPending be true here? ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It was set to false just a few lines above.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">     /**\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">      * Returns true if this controller is fine with performing a redraw operation or false if it >      * would prefer that the action didn't take place.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">      */\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">     public boolean getRedrawHint() {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">-        return aboutToCheckerboard();\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        return aboutToCheckerboard() ||\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            (getZoomFactor() != 1.0f && mPanZoomController.getRedrawHint());\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">     }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I don't understand why zoom factor is checked here.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    public boolean getRedrawHint() {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        switch (mState) {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            case NOTHING:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            case TOUCHING:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            case PANNING_HOLD:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+                return true;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            case FLING:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            case PANNING:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+            case PINCHING:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+                return false;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        throw new RuntimeException(\"Unknown state!\");\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I'd prefer a log+graceful handling here rather than an exception.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    /** Returns a new zoom position, with the offset and zoom scaled by the given factor. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "*/ >+    public PanZoomPosition scale(float factor) {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      return new PanZoomPosition(new PointF(x * factor, y * factor), zoom * factor);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "indent should be 4 spaces.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Also something I noticed was that in a bunch of places you do == comparisons on floats. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'm not sure that's a good idea, I'd prefer to see Math.abs(x-y) < epsilon to be robust against floating-point rounding errors.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Kartikaya Gupta (:kats)", 
            "email": "Kartikaya Gupta (:kats)"
        }, 
        {
            "date": "2011-11-22 12:16:25", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "FYI: This is currently being considered a blocker for releasing the Native UI nightly to Test Drivers.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Alex Keybl [:akeybl]", 
            "email": "Alex Keybl [:akeybl]"
        }, 
        {
            "date": "2011-11-22 12:18:33", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Patches for this are in bug 703141.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Patrick Walton (:pcwalton)", 
            "email": "Patrick Walton (:pcwalton)"
        }, 
        {
            "date": "2011-11-23 11:19:25", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Fixed with the landing of bug 703141.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Patrick Walton (:pcwalton)", 
            "email": "Patrick Walton (:pcwalton)"
        }, 
        {
            "date": "2011-11-25 07:08:29", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Verified fixed on: Mozilla /5.0 (Android;Linux armv7l;rv:11.0a1) Gecko/20111124 Firefox/11.0a1 Fennec/11.0a1\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Device: LG Optimus 2X (Android 2.2)\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Andreea Pod", 
            "email": "Andreea Pod"
        }
    ], 
    "id": "701830", 
    "project": "Mozilla", 
    "original_link": "https://bugzilla.mozilla.org/show_bug.cgi?id=701830"
}