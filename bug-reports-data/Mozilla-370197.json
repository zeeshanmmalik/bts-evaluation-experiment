{
    "project": "Mozilla", 
    "original_link": "http://dont.know.yet/370197", 
    "comments": [
        {
            "date": "2007-02-12 12:00:43", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "The Places query system supports serialization of queries into URIs, and\nvice-versa.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "We need to write tests that exercise the serialization and de-serialization of\nall public query options.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Dietrich Ayala (:dietrich)", 
            "email": "Dietrich Ayala (:dietrich)"
        }, 
        {
            "date": "2009-01-09 12:31:03", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "this is test writing using the places query api, so a good first bug to\nexercise with it.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Marco Bonardo [:mak]", 
            "email": "Marco Bonardo [:mak]"
        }, 
        {
            "date": "2009-01-16 16:24:16", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Created an attachment (id=357448) [details]\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "test case\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Here's a stab at it.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "  Instead of simply running through each option\nindividually and making sure it serializes and de-serializes correctly, this\ntest selects all subsets of a certain size from all options and applies the\noptions in those subsets together.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  So, every option is tested with every other\noption, multiple times in multiple combinations.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  In fact it starts out by\ndoing each option individually, then doing all subsets of size 2, and then all\nsubsets of size 3.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Once options are applied, it serializes the query, de-serializes it, and makes\nsure the de-serialized query equals the original.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  One thing it is not doing\nyet is testing serialization of more than one query at once.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Overboard?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  The code is documented;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": " I explain in more detail in a big comment\nat the top.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  Comments appreciated.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Drew Willcoxon :adw", 
            "email": "Drew Willcoxon :adw"
        }, 
        {
            "date": "2009-01-19 07:33:36", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "i'm going to read through this, hwv a fisrt couple notices...\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Personally i would move this test into \"queries\" folder since it's more\nspecialized than the generic unit folder.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This test is quite \"heavy\", i mean it takes almost 20s on my system to run,\nunit boxes are often much slower than it, so i suggest to reduce the amount of\ntesting done here.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " More comments will come later, this file is quite big.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Marco Bonardo [:mak]", 
            "email": "Marco Bonardo [:mak]"
        }, 
        {
            "date": "2009-01-19 10:19:25", 
            "sentences": [], 
            "name": "Marco Bonardo [:mak]", 
            "email": "Marco Bonardo [:mak]"
        }, 
        {
            "date": "2009-01-19 11:49:02", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(In reply to comment #4)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> also sometimes your code generates empty searches like \"place:\"\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "well this is a bug in deserialization code instead, i filed Bug 474334\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "please simply add support for multiple queries (2 are enough) and reduce\nswitches_hi to 2.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Marco Bonardo [:mak]", 
            "email": "Marco Bonardo [:mak]"
        }, 
        {
            "date": "2009-01-19 11:54:35", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(In reply to comment #3)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> Personally i would move this test into \"queries\" folder since it's more\n> specialized than the generic unit folder.\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "agreed\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> This test is quite \"heavy\", i mean it takes almost 20s on my system to run,\n> unit boxes are often much slower than it, so i suggest to reduce the amount of\n> testing done here.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " More comments will come later, this file is quite big.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I disagree here, however.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "  I'd rather have good extensive test coverage (and\nhe's done work to minimize it and still have full test coverage based on\ncomment 2).", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "  If unit tests take to long, we should throw more machines at the\nproblem, not reduce test coverage IMO.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Shawn Wilsher :sdwilsh", 
            "email": "Shawn Wilsher :sdwilsh"
        }, 
        {
            "date": "2009-01-19 12:00:10", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to comment #6)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> I disagree here, however.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "  I'd rather have good extensive test coverage (and\n> he's done work to minimize it and still have full test coverage based on\n> comment 2).", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "  If unit tests take to long, we should throw more machines at the\n> problem, not reduce test coverage IMO.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Notice i'm suggesting to move from testing all possible subsets of 3 \"options\"\nto all possible subsets of 2 \"options\", practically having 3 rather than 2 does\nnot bring us so much more testing, since also with 2 all options are tested\nagainst each other.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Marco Bonardo [:mak]", 
            "email": "Marco Bonardo [:mak]"
        }, 
        {
            "date": "2009-01-20 15:07:49", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Created an attachment (id=357871) [details]\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "test case\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Changes:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "- moved to tests/queries\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "- reduced maximum number of subsets chosen from 3 to 2\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "- now tests serialization of multiple queries together: for each individual\nquery we serialize, we serialize the previous 2 queries together\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Re: comment 3\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Reducing the maximum number of subsets chosen has likewise reduced running\ntime.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  It now takes 4-5s here when it used to take 17-18s.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Re: comment 4\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I think that means the test is working!", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " :) It's not doing anything real world\ncode can't do.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Re: comment 7\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Anytime there are N independent options it's a good idea to test all 2^N\nsubsets of those options, IMHO, or more realistically as close as we can\nreasonably get.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  Options may interact with each other (or whole groups of\nothers) in erroneous or other ways we don't expect, even if we expect that they\nwon't.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  That was my thinking behind this test.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Drew Willcoxon :adw", 
            "email": "Drew Willcoxon :adw"
        }, 
        {
            "date": "2009-01-20 15:56:53", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "your thinking is correct but we should also see what we can reasonably do based\non how complex/error prone is the code we are testing, how easy will be for a\nthird party to hack into our test in future, how many options we could add in\nfuture (double them up?)", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": ", if testing 3 options will give us much more credit\nthat we won't fail by 4 or by 5 than testing by 2, and so on...", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": " i think the\ncurrent one is a good compromise of all of these, and thanks to customization\nyou added it can be easily incremented/changed without you/anybody having to\nrewrite it all.\n", 
                    "is_in_email_summary": true
                }
            ], 
            "name": "Marco Bonardo [:mak]", 
            "email": "Marco Bonardo [:mak]"
        }, 
        {
            "date": "2009-01-20 17:04:31", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "(From update of attachment 357871 [details])\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      // Find the next rightmost pointer that is not adjacent to the current one.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      let si = set.length - 2;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  // set index\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      let pi = ptrs.length - 2;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " // ptrs index\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      while (pi >= 0 && ptrs[pi] === si)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        pi--;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+        si--;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "this sounds like a for\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+  for (let i = 0;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " i < aQueryArr.length;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " i++)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+  {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    let j = 0;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    for (;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " j < queryArr2.length;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " j++)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+      if (queryObjsEqual(querySwitches, aQueryArr[i], queryArr2[j])) break;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+    if (j < queryArr2.length) queryArr2.splice(j, 1);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+  }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": ">+  do_check_eq(queryArr2.length, 0);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "you could maybe use .", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "filter to walk the array and check length on the result\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'll not nitpick on code style since this is a test and is quite big to fix it\nup, hwv please take a look at other js code in other tests, Places, and\nglobally in browser, and try to follow the actual code style even if it's not\nyour usual coding style or you find it less readable.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " If you think some style\nis wrong we can discuss about it, but generally you should follow current\nconventions.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "For example parentheses positions (for functions and loops), and going to a\nnewline after an if condition are a couple things you don't follow here.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Also\nusually we try to not mix it up var and let unless is really necessary, to\navoid future error prone changes.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "btw, looks good, r=me\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Marco Bonardo [:mak]", 
            "email": "Marco Bonardo [:mak]"
        }, 
        {
            "date": "2009-01-20 19:51:05", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Created an attachment (id=357906) [details]\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "for checkin\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "(In reply to comment #10)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> this sounds like a for\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It would be a for without a body, which is ugly and dangerous IMHO.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  I searched\nmxr for that style and couldn't find any examples.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  A while loop seems more\nnatural to me here.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "> you could maybe use .", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "filter to walk the array and check length on the result\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I think that would be a more convoluted way to do it in this case.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  It would be\nO(2mn) when it's O(mn) as it is now.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  We'd have to filter one set, and inside\nthat filter we'd loop over the other set checking if queryObjsEqual.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "  Then we'd\nhave to do the filter on the other set, again with an inner loop, and finally\ncompare the two filter'ed array lengths.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I did fix the style nits, though.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " :) Thanks for the comments.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Drew Willcoxon :adw", 
            "email": "Drew Willcoxon :adw"
        }, 
        {
            "date": "2009-01-21 04:02:02", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "http://hg.mozilla.org/mozilla-central/rev/1180750fc0e1\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Marco Bonardo [:mak]", 
            "email": "Marco Bonardo [:mak]"
        }, 
        {
            "date": "2009-01-22 05:15:46", 
            "sentences": [], 
            "name": "Marco Bonardo [:mak]", 
            "email": "Marco Bonardo [:mak]"
        }, 
        {
            "date": "2009-01-27 07:59:37", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "verified per code checkin\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Tracy Walker", 
            "email": "Tracy Walker"
        }, 
        {
            "date": "2009-11-26 06:53:15", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Bug 451915 - move Firefox/Places bugs to Firefox/Bookmarks and History.", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Remove\nall bugspam from this move by filtering for the string \"places-to-b-and-h\".\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "In Thunderbird 3.0b, you do that as follows:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Tools | Message Filters\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Make sure the correct account is selected.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " Click \"New\"\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Conditions: Body   contains   places-to-b-and-h\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Change the action to \"Delete Message\".\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Select \"Manually Run\" from the dropdown at the top.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Click OK.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Select the filter in the list, make sure \"Inbox\" is selected at the bottom, and\nclick \"Run Now\".", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " This should delete all the bugspam.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": " You can then delete the\nfilter.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Gerv\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Gervase Markham [:gerv]", 
            "email": "Gervase Markham [:gerv]"
        }
    ], 
    "title": "Places query serialization needs tests"
}