{
    "contributors": [
        [
            "rockachu2", 
            "lexrank"
        ], 
        [
            "habilain", 
            "email"
        ]
    ], 
    "title": "Wierd Opengl Error", 
    "comments": [
        {
            "date": "2012-01-18 03:03:54", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Traceback (most recent call last):\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"D:\\Desktop\\PyGL3Display1.9-alpha\\examples\\criticalMass.py\", line 169, in <module>\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    main()\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"D:\\Desktop\\PyGL3Display1.9-alpha\\examples\\criticalMass.py\", line 151, in main\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    x = Level(10, (400,400))\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"D:\\Desktop\\PyGL3Display1.9-alpha\\examples\\criticalMass.py\", line 123, in __init__\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    self.ballImg = LoadImage('ball.png')\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"..\\PyGL3Display\\pygamesprites.py\", line 71, in LoadImage\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    return cls.Surfaceify(pygame.image.load(*args, **kwargs))\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"..\\PyGL3Display\\pygamesprites.py\", line 78, in Surfaceify\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    Surface.__init__(ret, pygameSurface.get_size())\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"..\\PyGL3Display\\twodimages.py\", line 40, in __init__\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "    manager = SpriteCommon.defaultManager if manager is None else manager   File \"..\\PyGL3Display\\twodspriteinfrastructure.py\", line 80, in __getattr__\n", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    shader=cls.defaultShader)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"..\\PyGL3Display\\twodspriteinfrastructure.py\", line 83, in __getattr__\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    cls.makeDefaultShader()\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"..\\PyGL3Display\\twodspriteinfrastructure.py\", line 149, in makeDefaultShader\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    cls.defaultShader = SpriteShader(cls.defaultVertexArrays)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"..\\PyGL3Display\\twodspriteinfrastructure.py\", line 213, in __init__\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    fragmentProgs=[fragmentProg])\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"..\\PyGL3Display\\twodshaders.py\", line 157, in __init__\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    super(TwoDTexturedShader, self).__init__(**kwargs)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"..\\PyGL3Display\\twodshaders.py\", line 115, in __init__\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    **kwargs)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"..\\PyGL3Display\\sharedinfrastructure.py\", line 415, in __init__\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    self.setup()\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"..\\PyGL3Display\\sharedinfrastructure.py\", line 425, in setup\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    vertexProg in self.vertexProgs]\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "  File \"..\\PyGL3Display\\sharedinfrastructure.py\", line 522, in getShader\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    raise ShaderError(errorMessage)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "ShaderError: Shader Error: \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Source:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    vec2 applyTransform(in vec2 pos, in vec2 origin, in vec2 offset, \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                        in float xScale, in float yScale, in float rotation)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    {\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "        vec2 offsets = vec2 ((offset.x - origin.x) * xScale,\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                             (offset.y - origin.y) * yScale);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "        mat2 rotMatrix = mat2 (cos(rotation), sin(rotation),\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "                              -sin(rotation), cos(rotation));             offsets = (rotMatrix * offsets);\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "        vec2 ret = offsets + pos;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "        return ret;\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "    }\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Error:\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Vertex shader was successfully compiled to run on hardware.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "rockachu2", 
            "email": "rockachu2"
        }, 
        {
            "date": "2012-01-18 03:04:26", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "All the examples fail to run\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "am I doing something wrong?\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "rockachu2", 
            "email": "rockachu2"
        }, 
        {
            "date": "2012-01-18 15:03:29", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Probably not.. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "can you post OS/Graphics card/Drivers? ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I just want to know on the likelihood of dodgy drivers (every error like this thus far has been due to dodgy drivers).\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "In the meantime, I'll see if there's an easy way around it...\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "habilain", 
            "email": "habilain"
        }, 
        {
            "date": "2012-01-18 17:57:49", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "windows 7 x64 \n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Ati radeon hd 5870 2gb\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "...\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "At catalyst 11.11 (not latest, because latest = bluescreen)\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "rockachu2", 
            "email": "rockachu2"
        }, 
        {
            "date": "2012-01-18 17:59:35", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "I suspect it's my pyopengl install.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It always has been.\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "rockachu2", 
            "email": "rockachu2"
        }, 
        {
            "date": "2012-01-18 20:51:01", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Nope, it's my code. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Turns out I'm querying the InfoLog of the shader to determine if it has compiled, which on the drivers I tested returns an empty string if all is well. ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "But it seems it doesn't have to, according to the spec, and I should use glGetShader instead.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Now, I've committed a proper fix to my own branch, but said branch is not ready for merging to trunk at the moment (working on examples, and well, most of them are broken; ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "not just the text example as in the alpha release). ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "So, in the meantime, a quick hacky fix is to open PyGL3Display/sharedinfrastructure.py, go to line 518. ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "It should read:  \"shaderLog = glGetShaderInfoLog(shader).strip()\" . ", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Change this to \"shaderLog = None\" - this will disable error checking on shaders, but that should be fine as it's more of a development feature than anything else.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "habilain", 
            "email": "habilain"
        }, 
        {
            "date": "2012-01-18 21:41:33", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "And pretty much as soon as I say that I can't release a proper fix, I find the bug in my own branch and get everything ready for the alpha 2 release. ", 
                    "is_in_email_summary": true
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Anyhow, alpha 2 should fix this bug.\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "\n", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Download: https://launchpad.net/pygl3display/trunk/1.9-alpha2\n", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "habilain", 
            "email": "habilain"
        }
    ], 
    "id": "917997", 
    "project": "Launchpad", 
    "original_link": "https://bugs.launchpad.net/ubuntu/+bug/917997"
}