{
    "project": "Mozilla", 
    "original_link": "http://dont.know.yet/355754", 
    "comments": [
        {
            "date": "2006-10-06 11:57:38", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "I'd like to move some table code to nsTArray, but it makes extensive use of\nnsVoidArray::SafeElementAt.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Now SafeElementAt doesn't make sense for nsTArray,\nbut I'd like to propose:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "template <class T>", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "nsTPtrArray : public nsTArray<T*>", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "{", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "public:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "nsTPtrArray() {}", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "explicit nsTPtrArray(size_type capacity) :", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "nsTArray<T*>(capacity) {}", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "T* SafeElementAt(index_type i) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "if (i >= Length()) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "return nsnull;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "}", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "return ElementAt(i);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "}", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "}", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Thoughts?", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Boris Zbarsky (:bz)", 
            "email": "Boris Zbarsky (:bz)"
        }, 
        {
            "date": "2006-10-09 11:24:41", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "I talked with darin about SafeElementAt before, and the idea came up to add a\nfunction like", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "nsTArray::SafeElementAt(index_type i, Item& item);", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I.e.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "you'd be able to pass in the 'default' value returned.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "However I this bug\nis a good idea too, since it could simply forward to the SafeElementAt on\nnsTArray.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonas Sicking (:sicking)", 
            "email": "Jonas Sicking (:sicking)"
        }, 
        {
            "date": "2006-10-09 11:29:15", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "The default-value SafeElementAt would be fine with me, sure.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Let's do that.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Boris Zbarsky (:bz)", 
            "email": "Boris Zbarsky (:bz)"
        }, 
        {
            "date": "2006-10-11 18:46:46", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=242018) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Patch to fix", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'll call your nsTPtrArray and raise one nsTConstPtrArray.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonas Sicking (:sicking)", 
            "email": "Jonas Sicking (:sicking)"
        }, 
        {
            "date": "2006-10-11 22:01:15", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 242018 [details])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "sr=me, and r=me on the content/xslt changes, but an xpcom peer or someone\nshould review the array changes...", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Boris Zbarsky (:bz)", 
            "email": "Boris Zbarsky (:bz)"
        }, 
        {
            "date": "2006-10-12 00:05:12", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 242018 [details])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "At first glance, it isn't obvious why nsTConstPtrArray exists.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Might be good\nto add some comments above it to point that out.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Are there any things to unit test for these classes?", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Darin Fisher", 
            "email": "Darin Fisher"
        }, 
        {
            "date": "2006-10-12 00:27:05", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Yeah, I could add some tests for the SafeElementAt functions, want a new patch\nfor that or should I just check it in?", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonas Sicking (:sicking)", 
            "email": "Jonas Sicking (:sicking)"
        }, 
        {
            "date": "2006-10-12 13:57:50", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=242098) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "Patch v2", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The original patch didn't work at all in VC6 and caused a lot of warnings in\nGCC3.2.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "The new patch contains the following changes:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "1.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Explicitly typedef the inherited types since the compiler doesn't otherwise\n   know that |elem_type| is a typename (rather than, say, a member) in the\n   inherited class.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "This is required since we're inheriting a templetized class", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "2. Make SafeElementAt(index_type) return by value rather than by reference.\n   Otherwise you could do something like", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "myArray.SafeElementAt(big_nr) = x;", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "which would try to assign into nsnull (and probably fail to compile)", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "3. Kill nsTConstPtrArray. I realized that nsTPtrArray<const int> works just as\n   well.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "4. Add unit tests.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonas Sicking (:sicking)", 
            "email": "Jonas Sicking (:sicking)"
        }, 
        {
            "date": "2006-10-12 16:04:39", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "(From update of attachment 242098 [details])", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "sr=bzbarsky", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Boris Zbarsky (:bz)", 
            "email": "Boris Zbarsky (:bz)"
        }, 
        {
            "date": "2006-10-17 17:40:49", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Checked in.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I had to add some |typename| declarations to the typedefs to get it\ncompiling everywhere.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonas Sicking (:sicking)", 
            "email": "Jonas Sicking (:sicking)"
        }, 
        {
            "date": "2007-01-22 15:44:06", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Isn't it possible to create a specialization of nsTArray that adds the extra\nmethod to nsTArray<T*> directly?", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert O'Callahan (:roc) (Mozilla Corporation)", 
            "email": "Robert O'Callahan (:roc) (Mozilla Corporation)"
        }, 
        {
            "date": "2007-01-22 15:51:24", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Can you do that such that it applies to all pointers?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "And wouldn't we need to copy the entire implementation of nsTArray to that\nspecialization?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Though we could create an nsTArray_base2 that both the generic\nand specialized version inherit from.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonas Sicking (:sicking)", 
            "email": "Jonas Sicking (:sicking)"
        }, 
        {
            "date": "2007-01-22 17:51:48", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Created an attachment (id=252407) [details]", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "example", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I'm not saying that this works in all compilers, but this example builds fine\nwith gcc and shows that you can have extra methods for all template instances\nof pointer type.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It also shows that you can even have those instances extend\nanother instance of the same template, although I don't necessarily recommend\nthis...", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert O'Callahan (:roc) (Mozilla Corporation)", 
            "email": "Robert O'Callahan (:roc) (Mozilla Corporation)"
        }, 
        {
            "date": "2007-01-23 13:51:27", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "The problem with that implementation is that you have to override all functions\nsince otherwise you'll have the wrong datatype in the signatures, like you did\nwith get(), no?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I.e.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "what you really want is to inherit Foo<T*>.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "However I think that can be solved by having a separate base class.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I.e.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "do\nsomething like:", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "template<T> nsTArray_base2<T> : public nsTArray_base {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "...", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "current implementation goes here...", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "}", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "template<T> nsTArray<T> : public nsTArray_base2<T> {}", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "template<T> nsTArray<T*> : public nsTArray_base2<T*> {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "SafeElementAt(index_type index) {", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "...", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "}", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "}", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonas Sicking (:sicking)", 
            "email": "Jonas Sicking (:sicking)"
        }, 
        {
            "date": "2007-01-23 14:01:08", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "However I'm not really convinced that this is buying us anything.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "But if you\nmake sure it works everywhere I wouldn't oppose checking it in :)", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonas Sicking (:sicking)", 
            "email": "Jonas Sicking (:sicking)"
        }, 
        {
            "date": "2007-01-23 14:04:45", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "What it buys us is that we don't have to deal with yet another array type.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "The thinking behind using a non-parameterized base class is that it might\nreduce code size.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "All arrays of pointers should be able to share the code for\ntheir methods.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I think we'd achieve that if the array-of-pointer class is just\ninline wrappers that cast to/from void* and call the single base class.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "I'm not\nsure that other approaches achieve that.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert O'Callahan (:roc) (Mozilla Corporation)", 
            "email": "Robert O'Callahan (:roc) (Mozilla Corporation)"
        }, 
        {
            "date": "2007-01-23 14:15:07", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "While you'd be able to reduce the compiled code, you would need to copy the\nentire source of nsTArray, no?", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "Or at least create a wrapper function for each\nfunction that does the appropriate casting.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "As far as far as reducing binary size there is actually a lot we can do with\nthe code as it is.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "I started some work on this a while ago, but I wanted to\nwait until we have more call sites so that we can measure the impact before\ngoing too crazy with it since some of it is a neatness vs.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "codesize tradeoff.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonas Sicking (:sicking)", 
            "email": "Jonas Sicking (:sicking)"
        }, 
        {
            "date": "2007-01-23 14:22:58", 
            "sentences": [
                {
                    "is_in_lex_summary": false, 
                    "text": "Right, I was thinking \"wrapper functions\".", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": false, 
                    "text": "", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "It would be easiest if you could make nsTArray<T*> inherit from\nnsTArray<void*>.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "But you'd need to stop the nsTArray<T*> template from applying\nto T=void.", 
                    "is_in_email_summary": false
                }, 
                {
                    "is_in_lex_summary": true, 
                    "text": "this is possible, but only by using tricks that I would consider\ndirty (OTOH the Boost people would say they're bread-and-butter :-) ).", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Robert O'Callahan (:roc) (Mozilla Corporation)", 
            "email": "Robert O'Callahan (:roc) (Mozilla Corporation)"
        }, 
        {
            "date": "2007-01-23 14:41:36", 
            "sentences": [
                {
                    "is_in_lex_summary": true, 
                    "text": "Maybe this is something we can look in to once we start working harder on\nreducing the compile size of nsTArray.", 
                    "is_in_email_summary": false
                }
            ], 
            "name": "Jonas Sicking (:sicking)", 
            "email": "Jonas Sicking (:sicking)"
        }
    ], 
    "title": "Add nsTPtrArray, which has a SafeElementAt method"
}